<MvCOMMENT>
| ========================================================================================================================
|   REVIEW IMPORT FUNCTIONS
| ========================================================================================================================
</MvCOMMENT>
<MvFUNCTION NAME = "Reviews_Import" PARAMETERS = "import var, session var, record var, run_data var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Validate_Fields_Create( l.session, l.record, l.run_data ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.column" ARRAY = "l.run_data:columns_all">
		<MvEVAL EXPR = "{ Set_Field_Default( l.session, l.record, l.run_data, l.column ) }">
	</MvFOREACH>
	
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( l.record:product_code, l.record:product ) }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'Could not load product with code:' $ l.record:product_code ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.record:product_id" VALUE = "{ l.record:product:id }">

	<MvASSIGN NAME = "l.record:id" VALUE = "0" />

	<MvIF EXPR = "{ Product_Review_Similar( l.record ) }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'Similar Review found (product code, title, summary & email match)' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ l.record:rating LT 1 OR l.record:rating GT 5 }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'Rating must be 1-5.' ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Insert( l.record ) }">
		<MvEVAL EXPR = "{ Record_Problem( l.session, g.Review_Error ) }">
		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.record, l.members ) }">
		<MvASSIGN NAME = "l.value" VALUE = "{ miva_variable_value( 'l.record:' $ l.field ) }">
		<MvIF EXPR = "{ ( 'field_' CIN l.field ) AND l.value }">
			<MvASSIGN NAME = "l.clean_field" VALUE = "{ substring_var( l.field, 7, ( len_var( l.field ) - 6 ) ) }" />
			<MvASSIGN NAME = "l.record_fields"  MEMBER = "{ l.clean_field }" VALUE = "{ l.value }">
		</MvIF>
	</MvFOREACH>

	<MvIF EXPR = "{ NOT ISNULL ( l.record_fields ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( l.record:id, l.record_fields ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvCOMMENT>
| ========================================================================================================================
|   VALIDATE FUNCTIONS
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Validate_Code" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ len( l.field ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field ) }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Login" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ len( l.field ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Login( l.field ) }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_String" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ len( l.field ) EQ 0 AND l.required }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Email" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ len( l.field ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Email( l.field ) }">
		<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field \'' $ l.field $ '\'.  ' $ g.Validation_Message ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Float" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Required( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_FloatingPoint_Optional( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Currency" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvCOMMENT>
	|
	| Strip commonly used currency formatting characters from the field
	|
	</MvCOMMENT>

	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '$', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '¥', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, '£', '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, asciichar( 128 ), '' ) }">
	<MvASSIGN		NAME = "l.field"	VALUE = "{ glosub( l.field, ',', '' ) }">

	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Currency_NonNegative_Required( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Currency_NonNegative_Optional( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Integer" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Required( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_Optional( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Integer_NonNegative" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Required( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber_NonNegative_Optional( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Int_Or_D" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.field"    VALUE = "{ trim( l.field ) }">

	<MvIF EXPR = "{ len( l.field ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSEIF EXPR = "{ tolower( l.field ) EQ 'default' }">
		<MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
		<MvIF EXPR = "{ l.column:related_field }">
			<MvASSIGN NAME = "l.record" MEMBER = "{ l.column:related_field }" VALUE = "{ l.column:related_default }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_WholeNumber( l.field ) }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'invalid ' $ l.column:name $ ' field.  ' $ g.Validation_Message ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		<MvELSE>
			<MvIF EXPR = "{ l.column:related_field }">
				<MvASSIGN NAME = "l.record" MEMBER = "{ l.column:related_field }" VALUE = 0>
			</MvIF>
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Bool" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ len( l.value ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
			<MvASSIGN NAME = "l.field" VALUE = 0>
		<MvELSEIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
			<MvASSIGN NAME = "l.field" VALUE = 1>
		<MvELSE>
			<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field contains an unrecognized value.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF> 
	</MvIF> 

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Bool_Or_D" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ len( l.value ) EQ 0 }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ ( l.value EQ 'no' ) OR ( l.value EQ 'false' ) OR ( ( 'x' $ l.value ) EQ 'x0' ) }">
			<MvASSIGN NAME = "l.field" VALUE = "n">
		<MvELSEIF EXPR = "{ ( l.value EQ 'yes' ) OR ( l.value EQ 'true' ) OR ( ( 'x' $ l.value ) EQ 'x1' ) }">
			<MvASSIGN NAME = "l.field" VALUE = "y">
		<MvELSEIF EXPR = "{ l.value EQ 'default' }">
			<MvASSIGN NAME = "l.field" VALUE = "d">
		<MvELSE>
			<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field contains an unrecognized value.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF> 
	</MvIF> 

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_List" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvFUNCTIONRETURN VALUE = 1>
	</MvIF>

	<MvASSIGN NAME = "l.values"			VALUE = "{ gettoken( l.column:validation, ':', 2 ) }">
	<MvASSIGN NAME = "l.results"		VALUE = "{ gettoken( l.column:validation, ':', 3 ) }">

	<MvASSIGN NAME = "l.pos"			VALUE = 1>
	<MvASSIGN NAME = "l.pos_value"		VALUE = "{ tolower( trim( gettoken( l.values , ',', l.pos ) ) ) }">
	
	<MvWHILE EXPR = "{ NOT ISNULL l.pos_value }">
		<MvIF EXPR = "{ l.value EQ l.pos_value }">
			<MvASSIGN NAME = "l.field"	VALUE = "{ trim( gettoken( l.results, ',', l.pos ) ) }">
			<MvFUNCTIONRETURN VALUE = 1>
		</MvIF>

		<MvASSIGN NAME = "l.pos"		VALUE = "{ l.pos + 1 }">
		<MvASSIGN NAME = "l.pos_value"	VALUE = "{ tolower( trim( gettoken( l.values, ',', l.pos ) ) ) }">
	</MvWHILE>

	<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field must be one of: ' $ l.values $ '.' ) }">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION> 

<MvFUNCTION NAME = "Validate_TimeT" PARAMETERS = "session var, record var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvREFERENCE    NAME = "l.field"    VARIABLE = "{ 'l.record:' $ l.column:field }">
	<MvASSIGN       NAME = "l.value"    VALUE = "{ tolower( trim( l.field ) ) }">

	<MvIF EXPR = "{ ISNULL l.value }">
		<MvIF EXPR = "{ l.required }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, 'empty ' $ l.column:name $ ' field.' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvCOMMENT>
	|
	| Straight numeric values are considered a raw time_t and passed through as-is
	| Other values are parsed as MM/DD/YYYY HH:MM:SS, with the time being optional
	|
	</MvCOMMENT>

	<MvIF EXPR = "{ NOT isdigit( l.value ) }">
		<MvASSIGN NAME = "l.date"		VALUE = "{ trim( gettoken( l.value, ' ', 1 ) ) }">
		<MvASSIGN NAME = "l.time"		VALUE = "{ trim( gettoken( l.value, ' ', 2 ) ) }">

		<MvASSIGN NAME = "l.year"		VALUE = "{ gettoken( l.date, '/', 3 ) }">
		<MvIF EXPR = "{ l.year LT 100 }">
			<MvASSIGN NAME = "l.year"	VALUE = "{ l.year + 2000 }">
		</MvIF>

		<MvASSIGN NAME = "l.value"		VALUE = "{ mktime_t( l.year, gettoken( l.date, '/', 1 ), gettoken( l.date, '/', 2 ),
															 gettoken( l.time, ':', 1 ), gettoken( l.time, ':', 2 ), gettoken( l.time, ':', 3 ),
															 g.Merchant_Local_Timezone ) }">
		<MvIF EXPR = "{ l.value LT 0 }">
			<MvEVAL EXPR = "{ Record_Skip( l.session, l.column:name $ ' field must be a valid date/time in the format MM/DD/YYYY HH:MM:SS' ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>

		<MvASSIGN NAME = "l.field"		VALUE = "{ l.value }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION> 

<MvFUNCTION NAME = "Validate_Field" PARAMETERS = "session var, record var, run_data var, column var, required" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.type"	VALUE = "{ gettoken( l.column:validation, ':', 1 ) }">

	<MvIF EXPR = "{ l.type EQ 'code' }">				<MvFUNCTIONRETURN VALUE = "{ Validate_Code( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'login' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Login( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'string' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_String( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'float' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Float( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'currency' }">		<MvFUNCTIONRETURN VALUE = "{ Validate_Currency( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'bool' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Bool( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'dbool' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Bool_Or_D( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'integer' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Integer( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'integer_nonneg' }">	<MvFUNCTIONRETURN VALUE = "{ Validate_Integer_NonNegative( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'int_or_d' }">		<MvFUNCTIONRETURN VALUE = "{ Validate_Int_Or_D( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'email' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_Email( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'list' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_List( l.session, l.record, l.column, l.required ) }">
	<MvELSEIF EXPR = "{ l.type EQ 'time_t' }">			<MvFUNCTIONRETURN VALUE = "{ Validate_TimeT( l.session, l.record, l.column, l.required ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Record_Skip( l.session, 'unknown validation type for ' $ l.column:name $ ' field.' ) }">
	<MvFUNCTIONRETURN VALUE = 0>
</MvFUNCTION>

<MvFUNCTION NAME = "Set_Field_Default" PARAMETERS = "session var, record var, run_data var, column var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ len( l.column:default ) NE 0 }">
		<MvREFERENCE NAME = "l.field" VARIABLE = "{ 'l.record:' $ l.column:field }">

		<MvIF EXPR = "{ NOT l.column:present }">
			<MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
		<MvELSEIF EXPR = "{ len( l.field ) EQ 0 }">
			<MvASSIGN NAME = "l.field" VALUE = "{ l.column:default }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvCOMMENT>
| ========================================================================================================================
|   MISCELLANEOUS UTILITY FUNCTIONS
| ========================================================================================================================
</MvCOMMENT>

<MvFUNCTION NAME = "Create_Columns_Present" PARAMETERS = "import var, columns_present var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.columns_present"            VALUE = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.import:map" INDEX = "l.pos">
		<MvIF EXPR = "{ len( l.field ) }">
			<MvASSIGN NAME = "l.columns_present" MEMBER = "{ l.field }" VALUE = "{ l.pos }">
		</MvIF>
	</MvFOREACH>
</MvFUNCTION>

<MvFUNCTION NAME = "Add_Standard_Column" PARAMETERS = "columns var, field, name, header, required, default, validation" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN       NAME = "l.column:field"         VALUE = "{ l.field }">
	<MvASSIGN       NAME = "l.column:name"          VALUE = "{ l.name }">
	<MvASSIGN       NAME = "l.column:header"        VALUE = "{ l.header }">
	<MvASSIGN       NAME = "l.column:required"      VALUE = "{ l.required }">
	<MvASSIGN       NAME = "l.column:default"       VALUE = "{ l.default }">
	<MvASSIGN       NAME = "l.column:validation"    VALUE = "{ l.validation }">

	<MvASSIGN       NAME = "l.column_pos"           VALUE = "{ miva_array_max( l.columns ) + 1 }">
	<MvREFERENCE    NAME = "l.columns"              INDEX = "{ l.column_pos }"      VARIABLE = "l.column">
</MvFUNCTION>

<MvFUNCTION NAME = "Add_Status_Field" PARAMETERS = "fields var, code, prompt, initial" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN       NAME = "l.field_pos"        VALUE = "{ miva_array_max( l.fields ) + 1 }">
	<MvREFERENCE    NAME = "l.field"            VARIABLE = "{ 'l.fields[' $ l.field_pos $ ']' }">
	<MvASSIGN       NAME = "l.field:code"       VALUE = "{ l.code }">
	<MvASSIGN       NAME = "l.field:prompt"     VALUE = "{ l.prompt }">
	<MvASSIGN       NAME = "l.field:initial"    VALUE = "{ l.initial }">
</MvFUNCTION>


<MvCOMMENT>
| ========================================================================================================================
|   HELPER FUNCTIONS
| ========================================================================================================================
</MvCOMMENT>


<MvFUNCTION NAME = "Validate_Columns" PARAMETERS = "import var, columns_present var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT l.columns_present:product_code OR NOT l.columns_present:rating OR NOT l.columns_present:title OR NOT l.columns_present:summary }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-IMPORT-0002', 'Product Code, Rating, Title & Summary must be present.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Record_Skip" PARAMETERS = "session var, message" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Delimited_Log( l.session, 'Skipped - ' $ l.message ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_IMP_UT ].Import_Session_StatusField_Increment( l.session, 'records_skipped', 1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Record_Problem" PARAMETERS = "session var, message" STANDARDOUTPUTLEVEL = "">
	<MvEVAL EXPR = "{ [ g.Module_Feature_IMP_UT ].Import_Session_Delimited_Log( l.session, 'Record Problem - ' $ l.message ) }">
	<MvEVAL EXPR = "{ [ g.Module_Feature_IMP_UT ].Import_Session_StatusField_Increment( l.session, 'record_problems', 1 ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Fields_Create" PARAMETERS = "session var, product var, run_data var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.column" ARRAY = "l.run_data:columns_list">
		<MvIF EXPR = "{ NOT Validate_Field( l.session, l.product, l.run_data, l.column, l.column:required ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFOREACH ITERATOR = "l.column" ARRAY = "l.run_data:columns_all">
		<MvEVAL EXPR = "{ Set_Field_Default( l.session, l.product, l.run_data, l.column ) }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Validate_Fields_Update" PARAMETERS = "session var, product var, run_data var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.column" ARRAY = "l.run_data:columns_list">
		<MvIF EXPR = "{ NOT Validate_Field( l.session, l.product, l.run_data, l.column, 0 ) }">
			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>