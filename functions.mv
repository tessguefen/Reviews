<MvCOMMENT>
|
|	Function List
|
|		Product_Review_Read( review var, view )
|		Product_Review_Load_ID( id, review var )
|		Product_Review_WithFields_Load_ID( id, review var )
|		Product_Reviews_Insert_Lowlevel( review var )
|		Product_Reviews_Insert( review var )
|		Product_Reviews_Update_Lowlevel( review var )
|		Product_Reviews_Update( review var )
|		Product_Reviews_Delete( review_id )
|		Product_Review_Similar( review var )
|
|		JSON_Product_Reviews_Load_Query( module var )
|		JSON_Product_Reviews_Update( module var )
|		JSON_Product_Reviews_Insert( module var )
|		JSON_Product_Reviews_Delete( module var )
|		JSON_Load_Additional_Fields( module var )
|		JSON_Review_Approved_Update( module var )
|		JSON_Review_Notify_Update( module var )
|		JSON_Review_Verified_Update( module var )
|
|		Additional_Fields_Read( field var, view )
|		Load_Additional_Fields( fields var )
|		Load_Additional_Fields_Product_Review( review_id, fields var )
|		Load_Additional_Value( reivew_id, field_id )
|
|		AdditionalField_Load_ID( id, outputvar )
|		AdditionalField_Load_Code( code, output var )
|		AdditionalValue_Load( field_id, review_id, output var )
|		AdditionalValues_Update( field_id, review_id, value )
|		AdditionalValues_Insert( field_id, review_id, value )
|		AdditionalValues_Delete_Review( review_id )
|
|		AdditionalFields_Update( field var ) 
|		AdditionalFields_Insert( field var )
|		AdditionalFields_Delete( field_id )
|
|		JSON_AdditionalFields_Load_Query( module var )
|		JSON_AdditionalFields_Update( module var )
|		JSON_AdditionalFields_Insert( module var )
|		JSON_AdditionalFields_Delete( module var )
|
|	Front-End Functions
|		FrontEnd_Add_Review()
|		Form_Template( module var, param, all_settings var )
|		Reviews_Template( module var, param, all_settings var, product_id )
|		Reviews_Load_Query( product_id, output var )
|		Product_Rating( module var, param, all_settings var, product_id, return var )
|		Product_Review_Count( module var, param, all_settings var, product_id, return var )
|		Product_Review_Breakdowns( module var, param, all_settings var, product_id, return var )
|		Date( module var, param, all_settings var, format, timestamp, return var )
|		Review_Check_Verified( email, product_id )
|
|	Email Triggers
|		Trigger_Merchant_Email( review_id )
|		Trigger_Customer_Email( review var )
|		Trigger_MailAfter_Email()
|		MailAfter_Check_Order( order_id, email_settings var )
|		Trigger_MailAfter_Email_Lowlevel( order var, email_settings var )
|		Trigger_Email( review_id, order var, page_code, email var)
|		Reviews_Add_Order( order_id )
|		Remove_Order( order_id )
|		Review_Check_EmailXProduct( email, product_id )
|		Test_MailAfter_Email( module var, param, all_settings var, order_id, email )
|
|	Google Recaptcha
|		reCAPTCHA( secret, response )
|
</MvCOMMENT>

<MvFUNCTION NAME = "Product_Review_Read" PARAMETERS = "review var, view">
	<MvASSIGN NAME = "l.review" MEMBER = "id"			VALUE = "{ miva_variable_value( l.view $ '.d.id' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ miva_variable_value( l.view $ '.d.created' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ miva_variable_value( l.view $ '.d.product_id' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ miva_variable_value( l.view $ '.d.cust_id' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ miva_variable_value( l.view $ '.d.order_id' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ miva_variable_value( l.view $ '.d.approved' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ miva_variable_value( l.view $ '.d.rating' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ miva_variable_value( l.view $ '.d.name' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ miva_variable_value( l.view $ '.d.email' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ miva_variable_value( l.view $ '.d.location' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ miva_variable_value( l.view $ '.d.notify' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ miva_variable_value( l.view $ '.d.title' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ miva_variable_value( l.view $ '.d.summary' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "store_reply"	VALUE = "{ miva_variable_value( l.view $ '.d.store_reply' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "notified"		VALUE = "{ miva_variable_value( l.view $ '.d.notified' ) }">
	<MvASSIGN NAME = "l.review" MEMBER = "verified"		VALUE = "{ miva_variable_value( l.view $ '.d.verified' ) }">
</MvFUNCTION>


<MvFUNCTION NAME = "Product_Review_Load_ID" PARAMETERS = "id, review var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGReviews_Products_Load"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products WHERE id = ? '}"
				FIELDS	= "l.id">
	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGReviews_Products_Load.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products_Load">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGReviews-ERROR-0002' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Product_Review_Read( l.review, 'TGReviews_Products_Load' ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products_Load">

	<MvIF EXPR = "{ NOT l.review:id }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Review_WithFields_Load_ID" PARAMETERS = "id, review var">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.id, l.review ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSIGN NAME = "l.void" VALUE = "{ [ g.Module_Library_DB ].Product_Load_ID( l.review:product_id, l.review:product ) }">

	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields_Product_Review( l.id, l.fields) }">
		<MvIF EXPR = "{ ISNULL l.field:value }">
			<MvFOREACHCONTINUE />
		</MvIF>
		<MvASSIGN NAME = "l.addl_count" VALUE = "{ l.addl_count + 1 }" />
		<MvASSIGN NAME = "l.review:additional_fields" INDEX = "{ l.addl_count }" MEMBER = "code" VALUE = "{ l.field:code }">
		<MvASSIGN NAME = "l.review:additional_fields" INDEX = "{ l.addl_count }" MEMBER = "name" VALUE = "{ l.field:name }">
		<MvASSIGN NAME = "l.review:additional_fields" INDEX = "{ l.addl_count }" MEMBER = "value" VALUE = "{ l.field:value }">
	</MvFOREACH>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Insert_Lowlevel" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.review:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGRProduct' ) }">

	<MvIF EXPR = "{ ISNULL l.review:notified }">
		<MvASSIGN NAME = "l.review:notified" VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_Products
					      ( id, created, product_id, cust_id, order_id, approved, rating, name, email, location, notify, title, summary, store_reply, notified, verified )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.review:id, l.review:created, l.review:product_id, l.review:cust_id, l.review:order_id, l.review:approved, l.review:rating, l.review:name, l.review:email, l.review:location, l.review:notify, l.review:title, l.review:summary, l.review:store_reply, l.review:notified, l.review:verified">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Insert" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.review:product_id }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "product_id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Missing Product.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ ( ISNULL l.review:rating ) OR ( l.review:rating LE 0 ) OR ( l.review:rating GT 5 ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "rating">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Rating value should be 1-5.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.review:cust_id }">		<MvASSIGN NAME = "l.review:cust_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:order_id }">	<MvASSIGN NAME = "l.review:order_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:approved }">	<MvASSIGN NAME = "l.review:approved" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:verified }">	<MvASSIGN NAME = "l.review:verified" VALUE = "{ Review_Check_Verified( l.review:email, l.review:product_id ) }">	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Insert_Lowlevel( l.review ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Update_Lowlevel" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review:id, l.old_review ) }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_Products
					      SET
							created		= ?,
							product_id	= ?,
							cust_id		= ?,
							order_id	= ?,
							approved	= ?,
							rating		= ?,
							name		= ?,
							email		= ?,
							location	= ?,
							notify		= ?,
							title		= ?,
							summary		= ?,
							store_reply	= ?,
							notified	= ?,
							verified	= ?
					      WHERE
						    id			= ?' }"
			 FIELDS	= "l.review:created, l.review:product_id, l.review:cust_id, l.review:order_id, l.review:approved, l.review:rating, l.review:name, l.review:email, l.review:location, l.review:notify, l.review:title, l.review:summary, l.review:store_reply, l.review:notified, l.review:verified, l.review:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.void" VALUE = "{ Trigger_Customer_Email( l.review ) }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Update" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.review:product_id }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "product_id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Missing Product.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ ( ISNULL l.review:rating ) OR ( l.review:rating LE 0 ) OR ( l.review:rating GT 5 ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "rating">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Rating value should be 1-5.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.review:cust_id }">		<MvASSIGN NAME = "l.review:cust_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:order_id }">	<MvASSIGN NAME = "l.review:order_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:approved }">	<MvASSIGN NAME = "l.review:approved" VALUE = "0">	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Update_LowLevel( l.review ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ g.Review_Field_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Delete" PARAMETERS = "review_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products WHERE id = ?' }"
			 FIELDS	= "l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0005', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalValues_Delete_Review( l.review_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Review_Similar" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.check:product_id" VALUE = "{ trim( l.review:product_id ) }">
	<MvASSIGN NAME = "l.check:title" VALUE = "{ trim( l.review:title ) }">
	<MvASSIGN NAME = "l.check:summary" VALUE = "{ trim( l.review:summary ) }">
	<MvASSIGN NAME = "l.check:email" VALUE = "{ trim( l.review:email ) }">

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_Products"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products WHERE product_id = ? AND title = ? AND summary = ? AND email = ?' }"
				FIELDS	= "l.check:product_id, l.check:title, l.check:summary, l.check:email">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0006', g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.found" VALUE = "0">

	<MvWHILE EXPR = "{ NOT TGReviews_Products.d.EOF }">
		<MvASSIGN NAME = "l.found" VALUE = "1">
		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">

	<MvFUNCTIONRETURN VALUE = "{ l.found }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*, p.code as product_code, p.name as product_name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 's', g.Store_Table_Prefix $ 'Products', 'p', 's.product_id = p.id', '' ) }">

	<MvIF EXPR = "{ g.Product_ID GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ? ', 'g.Product_ID' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,created:s.created,product_id:s.product_id,cust_id:s.cust_id,order_id:s.order_id,approved:s.approved,rating:s.rating,name:s.name,email:s.email,location:s.location,notify:s.notify,title:s.title,summary:s.summary,store_reply:s.store_reply,notified:s.notified,verified:s.verified,product_name:p.name,product_code:p.code' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,created:s.created,product_id:s.product_id,cust_id:s.cust_id,order_id:s.order_id,approved:s.approved,rating:s.rating,name:s.name,email:s.email,location:s.location,notify:s.notify,title:s.title,summary:s.summary,store_reply:s.store_reply,notified:s.notified,verified:s.verified,product_name:p.name,product_code:p.code', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Products', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-JSON-0001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGReviews_Products.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGReviews_Products.d.id ) }">,
					"created": <MvEVAL EXPR = "{ int( TGReviews_Products.d.created ) }">,
					"product_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.product_id ) }">,
					"cust_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.cust_id ) }">,
					"order_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.order_id ) }">,
					"approved" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.approved ) }">,
					"rating" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.rating ) }">,
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.name ) }">",
					"email" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.email ) }">",
					"location" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.location ) }">",
					"notify" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.notify ) }">,
					"title" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.title ) }">",
					"summary" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.summary ) }">",
					"store_reply" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.store_reply ) }">",
					"notified": <MvEVAL EXPR = "{ int( TGReviews_Products.d.notified ) }">,
					"verified" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.verified ) }">,
					"product_code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.product_code ) }">",
					"product_name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.product_name ) }">"
					<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields_Product_Review( TGReviews_Products.d.id, l.fields) }">
						,"AdditionalFields_<MvEVAL EXPR = "{ l.field:code }">": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:value ) }">"
					</MvFOREACH>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">
	}

</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Product_Code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a Product Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.Product_Code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a valid Product Code.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "id"			VALUE = "{ g.id }">
	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ g.created }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ g.cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ g.order_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ g.approved }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ g.rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ g.name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ g.email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ g.location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ g.notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ g.title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ g.summary }">
	<MvASSIGN NAME = "l.review" MEMBER = "store_reply"	VALUE = "{ g.store_reply }">
	<MvASSIGN NAME = "l.review" MEMBER = "verified"		VALUE = "{ g.verified }">


	<MvIF EXPR = "{ NOT Product_Reviews_Update( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvIF EXPR = "{ NOT ISNULL ( g.AdditionalFields ) }">
		<MvIF EXPR = "{ NOT Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( g.id, g.AdditionalFields ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AdditionalFields_' $ g.Review_Field_Error, g.Review_Error ) }">
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Product_Code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a Product Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.Product_Code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a valid Product Code.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ g.created }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ g.cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ g.order_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ g.approved }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ g.rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ g.name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ g.email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ g.location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ g.notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ g.title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ g.summary }">
	<MvASSIGN NAME = "l.review" MEMBER = "store_reply"	VALUE = "{ g.store_reply }">

	<MvIF EXPR = "{ NOT Product_Reviews_Insert( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL ( g.AdditionalFields ) }">
		<MvIF EXPR = "{ NOT Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( l.review:id, g.AdditionalFields ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AdditionalFields_' $ g.Review_Field_Error, g.Review_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Load_Additional_Fields" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvASSIGN NAME = "l.dnum" VALUE = "1">
	{
	"success": 1,
	"data": [
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields( l.fields ) }">
			<MvIF EXPR = "{ l.dnum GT 1 }">,</MvIF>
			{
				"id": "<MvEVAL EXPR ="{ int( l.field:id ) }">",
				"code": "<MvEVAL EXPR ="{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
				"name": "<MvEVAL EXPR ="{ [ g.Module_JSON ].JSON_Encode( l.field:name ) }">"
			}
			<MvASSIGN NAME = "l.dnum" VALUE = "{ l.dnum + 1 }">
		</MvFOREACH>
		]
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Review_Approved_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Review_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review ID must be present.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Approved }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'approved', 'Value for Approved may not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.Approved NE 1 ) AND ( g.Approved NE 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'approved', 'Value for Approved must be 1 or 0.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( g.Review_ID, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review could not be loaded.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "approved" VALUE = "{ g.Approved }">

	<MvIF EXPR = "{ NOT Product_Reviews_Update( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Review_Notify_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Review_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review ID must be present.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Notify }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'notify', 'Value for Notify may not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.Notify NE 1 ) AND ( g.Notify NE 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'notify', 'Value for Notify must be 1 or 0.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( g.Review_ID, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review could not be loaded.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review:notify" VALUE = "{ g.Notify }">

	<MvIF EXPR = "{ NOT Product_Reviews_Update( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Review_Verified_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Review_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review ID must be present.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.Verified }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'verified', 'Value for Verified may not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ( g.Verified NE 1 ) AND ( g.Verified NE 0 ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'verified', 'Value for Verified must be 1 or 0.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( g.Review_ID, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Review could not be loaded.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review:verified" VALUE = "{ g.Verified }">

	<MvIF EXPR = "{ NOT Product_Reviews_Update( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Review_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has occured.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Delete( g.Review_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has occured.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Additional_Fields_Read" PARAMETERS = "field var, view">
	<MvASSIGN NAME = "l.field" MEMBER = "id"			VALUE = "{ miva_variable_value( l.view $ '.d.id' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "code"		VALUE = "{ miva_variable_value( l.view $ '.d.code' ) }">
	<MvASSIGN NAME = "l.field" MEMBER = "name"	VALUE = "{ miva_variable_value( l.view $ '.d.name' ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Fields" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields" VALUE = "">

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields' }">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-0003:', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "0">

	<MvWHILE EXPR = "{ NOT TGReviews_AdditionalFields.d.EOF }">
		<MvEVAL EXPR = "{ Additional_Fields_Read( l.fields[++l.count], 'TGReviews_AdditionalFields' ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_AdditionalFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Fields_Product_Review" PARAMETERS = "review_id, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields( l.fields ) }">
		<MvASSIGN NAME = "l.field" MEMBER = "value" VALUE = "{ Load_Additional_Value( l.review_id, l.field:id ) }">
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = "{ miva_array_elements( l.fields ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Value" PARAMETERS = "review_id, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "" />
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGReviews_AdditionalValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE rating_id = ? AND field_id = ? ' }"
				FIELDS	= "l.review_id, l.field_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0007', 'An error occured while checking a record. Error:' $ g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.return"  VALUE = "{ TGReviews_AdditionalValues.d.value }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalValues">

	<MvFUNCTIONRETURN VALUE = "{ l.return }">
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_AdditionalValues_InsertUpdate_LowLevel" PARAMETERS = "review_id, values var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.values, l.members) }">
		<MvIF EXPR = "{ NOT AdditionalField_Load_Code( l.member, l.addlfield ) }">
			<MvFOREACHCONTINUE />
		</MvIF>
		<MvIF EXPR = "{ AdditionalValue_Load( l.addlfield:id, l.review_id, l.value ) }">
			<MvIF EXPR = "{ NOT AdditionalValues_Update( l.addlfield:id, l.review_id, miva_variable_value( 'l.values:' $ l.member ) ) }">
				<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ l.member }">
				<MvFUNCTIONRETURN VALUE = "0" />
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT AdditionalValues_Insert( l.addlfield:id, l.review_id, miva_variable_value( 'l.values:' $ l.member ) ) }">
				<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ l.member }">
				<MvFUNCTIONRETURN VALUE = "0" />
			</MvIF>
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = "1" />
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalField_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE id = ?' }"
				FIELDS	= "l.id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-0005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Additional_Fields_Read( l.output, 'TGReviews_AdditionalFields' ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvIF EXPR = "{ NOT l.output:id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalField_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE code = ?' }"
				FIELDS	= "l.code">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">

		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-0005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Additional_Fields_Read( l.output, 'TGReviews_AdditionalFields' ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvIF EXPR = "{ NOT l.output:id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "Additional_Value_Read" PARAMETERS = "value var, view" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.value" MEMBER = "field_id"	VALUE = "{ miva_variable_value( l.view $ '.d.field_id' ) }">
	<MvASSIGN NAME = "l.value" MEMBER = "rating_id"	VALUE = "{ miva_variable_value( l.view $ '.d.rating_id' ) }">
	<MvASSIGN NAME = "l.value" MEMBER = "value"		VALUE = "{ miva_variable_value( l.view $ '.d.value' ) }">

</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValue_Load" PARAMETERS = "field_id, review_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalValues"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE field_id = ? AND rating_id = ?' }"
				FIELDS	= "l.field_id, l.review_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-0006', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Additional_Value_Read( l.output, 'TGReviews_AdditionalValues' ) }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalValues">
		
	<MvIF EXPR = "{ NOT l.output:field_id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Update" PARAMETERS = "field_id, review_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.output ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'field_id ' $ l.field_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.old_review ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'review_id ' $ l.review_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues
					      SET
							value		= ?
					      WHERE
						    field_id	= ?
						   AND
						   	rating_id	= ?' }"
			 FIELDS	= "l.value, l.field_id, l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0008', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Insert" PARAMETERS = "field_id, review_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.output ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'field_id ' $ l.field_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.old_review ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'review_id ' $ l.review_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues
					      ( field_id, rating_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.field_id, l.review_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0009', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Delete_Review" PARAMETERS = "review_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE rating_id = ?' }"
			 FIELDS	= "l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0010', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Update" PARAMETERS = "field" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id" 	VALUE = "{ trim( l.field:id ) }">
	<MvASSIGN NAME = "l.field:code"	VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:name"	VALUE = "{ trim( l.field:name ) }">

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:name }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "name">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Name is required.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field:id, l.old_field ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Invalid Field">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.field:code NE l.old_field:code }">
		<MvIF EXPR = "{ AdditionalField_Load_Code( l.field:code, l.code_exist ) }">
			<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
			<MvASSIGN NAME = "g.Review_Error" VALUE = "Code already exsist.">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields
					      SET
							code	= ?,
							name	= ?
					      WHERE
						    id			= ?' }"
			 FIELDS	= "l.field:code,l.field:name,l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0011', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Insert" PARAMETERS = "field var" STANDARDOUTPUTLEVEL = "">

	<MvASSIGN NAME = "l.field:code"	VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:name"	VALUE = "{ trim( l.field:name ) }">

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:name }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "name">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Name is required.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ AdditionalField_Load_Code( l.field:code, l.code_exist ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Code already exsist.">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGRAdditional' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields
					      ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.field:id,l.field:code,l.field:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0012', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Delete" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0013', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0014', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_AdditionalFields', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_AdditionalFields', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-JSON-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGReviews_AdditionalFields.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGReviews_AdditionalFields.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_AdditionalFields.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_AdditionalFields.d.name ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGReviews_AdditionalFields" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">
	}

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Additional Fields ID can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Additional Fields Code can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Additional Fields Name can not be empty.' ) }">
	</MvIF>


	<MvASSIGN NAME = "l.additional_field" MEMBER = "id"		VALUE = "{ g.id }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "code"	VALUE = "{ g.code }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "name"	VALUE = "{ g.name }">

	<MvIF EXPR = "{ NOT AdditionalFields_Update( l.additional_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Additional Fields Code can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Additional Fields Name can not be empty.' ) }">
	</MvIF>


	<MvASSIGN NAME = "l.additional_field" MEMBER = "code"	VALUE = "{ g.code }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "name"	VALUE = "{ g.name }">

	<MvIF EXPR = "{ NOT AdditionalFields_Insert( l.additional_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Field_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Additional Fields ID can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalFields_Delete( g.Field_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "FrontEnd_Add_Review" PARAMETERS = "" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.TGR_Product_Code" VALUE = "{ trim( g.TGR_Product_Code ) }" />
	<MvASSIGN NAME = "g.TGR_Order_ID" VALUE = "{ trim( g.TGR_Order_ID ) }" />
	<MvASSIGN NAME = "g.TGR_Rating" VALUE = "{ trim( g.TGR_Rating ) }" />
	<MvASSIGN NAME = "g.TGR_Name" VALUE = "{ trim( g.TGR_Name ) }" />
	<MvASSIGN NAME = "g.TGR_Email" VALUE = "{ trim( g.TGR_Email ) }" />
	<MvASSIGN NAME = "g.TGR_Location" VALUE = "{ trim( g.TGR_Location ) }" />
	<MvASSIGN NAME = "g.TGR_Notify" VALUE = "{ trim( g.TGR_Notify ) }" />
	<MvASSIGN NAME = "g.TGR_Title" VALUE = "{ trim( g.TGR_Title ) }" />
	<MvASSIGN NAME = "g.TGR_Summary" VALUE = "{ trim( g.TGR_Summary ) }" />

	<MvIF EXPR = "{ ISNULL g.TGR_Product_Code }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Missing Product Code.">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.TGR_Product_Code, l.review:product ) }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Product Code is Invalid.">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ( g.TGR_Rating LT 1 ) OR ( g.TGR_Rating GT 5 ) OR NOT isdigit( g.TGR_Rating ) }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Rating must have a value of 1-5.">
		<MvASSIGN NAME = "g.tgr_rating_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'required', l.required_fields ) }">
	<MvASSIGN NAME = "l.required_fields" VALUE = "{ miva_array_deserialize( l.required_fields ) }">

	<MvIF EXPR = "{ l.required_fields:name EQ 1 AND ISNULL g.TGR_name }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Name is required.">
		<MvASSIGN NAME = "g.tgr_name_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.required_fields:email EQ 1 AND ISNULL g.TGR_email }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Email is required.">
		<MvASSIGN NAME = "g.tgr_email_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ g.tgr_Email AND NOT [ g.Module_Library_Utilities ].Email_Validate( g.tgr_Email ) }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Please specify a valid email address.">
		<MvASSIGN NAME = "g.tgr_email_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.required_fields:location EQ 1 AND ISNULL g.TGR_location }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Location is required.">
		<MvASSIGN NAME = "g.tgr_location_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.required_fields:title EQ 1 AND ISNULL g.TGR_title }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Title is required.">
		<MvASSIGN NAME = "g.tgr_title_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.required_fields:summary EQ 1 AND ISNULL g.TGR_summary }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Summary is required.">
		<MvASSIGN NAME = "g.tgr_summary_class" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT isdigit( g.TGR_Order_ID ) }">
		<MvASSIGN NAME = "g.TGR_Order_ID" VALUE = "" />
	</MvIF>

	<MvIF EXPR = "{ g.TGR_Notify NE 1 }">
		<MvASSIGN NAME = "g.TGR_Notify" VALUE = "0" />
	<MvELSEIF EXPR = "{ ISNULL g.TGR_Email }">
		<MvASSIGN NAME = "g.TGR_Notify" VALUE = "0" />
	</MvIF>

	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'recaptcha', l.recaptcha ) }">
	<MvASSIGN NAME = "l.recaptcha" VALUE = "{ miva_array_deserialize( l.recaptcha ) }">

	<MvIF EXPR = "{ l.recaptcha:enable EQ 1 }">
		<MvIF EXPR = "{ NOT reCAPTCHA( l.recaptcha:private_key, miva_variable_value( 'g.g-recaptcha-response' ) ) }">
			<MvASSIGN NAME = "g.TGR_Error" VALUE = "Invalid reCAPTCHA.">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ s.dyn_time_t }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ l.review:product:id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ g.Basket:cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ g.TGR_Order_ID }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ g.TGR_Rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ g.TGR_Name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ g.TGR_Email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ g.TGR_Location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ g.TGR_Notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ g.TGR_Title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ g.TGR_Summary }">

	<MvIF EXPR = "{ Product_Review_Similar( l.review ) }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "Review has already been submitted.">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Insert( l.review ) }">
		<MvASSIGN NAME = "g.TGR_Error" VALUE = "{ g.Review_Error }">
		<MvASSIGN NAME = "{ 'g.tgr_' $ g.Review_Field_Error $ '_class' }" VALUE = "error">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL ( g.tgr_AdditionalFields ) }">
		<MvIF EXPR = "{ NOT Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( l.review:id, g.tgr_AdditionalFields ) }">
			<MvASSIGN NAME = "g.TGR_Error" VALUE = "{ g.Review_Error }">
			<MvASSIGN NAME = "{ 'g.tgr_AdditionalFields_' $ g.Review_Field_Error $ '_class' }" VALUE = "error">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'auto_approve', l.auto_approve ) }">
	<MvIF EXPR = "{ l.auto_approve EQ 1 }">
		<MvASSIGN NAME = "l.review" MEMBER = "approved" VALUE = "1">
		<MvASSIGN NAME = "l.void" VALUE = "{ Product_Reviews_Update( l.review ) }">
	</MvIF>

	<MvCOMMENT>
	|
	|	Check Settings for Triggers for Merchant.
	|
	</MvCOMMENT>

	<MvASSIGN NAME = "l.void" VALUE = "{ Trigger_Merchant_Email( l.review:id ) }">

	<MvASSIGN NAME = "g.TGR_Product_Code" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Order_ID" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Rating" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Name" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Email" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Location" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Notify" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Title" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_Summary" VALUE = "" />
	<MvASSIGN NAME = "g.TGR_AdditionalFields" VALUE = "" />

	<MvASSIGN NAME = "g.TGR_Review_ID" VALUE = "{ l.review:id }" />
	<MvASSIGN NAME = "g.TGR_Review_Success" VALUE = "1" />

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Form_Template" PARAMETERS = "module var, param, all_settings var" STANDARDOUTPUTLEVEL = "text, html">
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'form_template', l.form_template_id ) }">
	<MvIF EXPR = "{ l.form_template_id GT 0 }">
		<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.form_template_id, l.form_template ) }">
			<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields( l.fields ) }">
				<MvASSIGN NAME = "l.field_count" VALUE = "{ l.field_count + 1 }" />
				<MvASSIGN NAME = "l.all_settings:tgr:additional_fields" INDEX = "{ l.field_count }" MEMBER = "name" VALUE = "{ l.field:name }">
				<MvASSIGN NAME = "l.all_settings:tgr:additional_fields" INDEX = "{ l.field_count }" MEMBER = "code" VALUE = "{ l.field:code }">
				<MvASSIGN NAME = "l.all_settings:tgr:additional_fields" INDEX = "{ l.field_count }" MEMBER = "value" VALUE = "{ miva_variable_value( 'g.tgr_AdditionalFields:' $ l.field:code ) }">
			</MvFOREACH>
			<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'recaptcha', l.recaptcha ) }">
			<MvASSIGN NAME = "l.recaptcha" VALUE = "{ miva_array_deserialize( l.recaptcha ) }">
			<MvASSIGN NAME = "l.all_settings:tgr:recaptcha:enabled" VALUE = "{ l.recaptcha:enable }" />
			<MvASSIGN NAME = "l.all_settings:tgr:recaptcha:public_key" VALUE = "{ l.recaptcha:public_key }">
			<MvEVAL EXPR = "{ [ g.Store_Template_Path $ l.form_template:filename ].Template_Render( l.null, l.all_settings ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Reviews_Template" PARAMETERS = "module var, param, all_settings var, product_id" STANDARDOUTPUTLEVEL = "text, html">
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'reviews_template', l.reviews_template_id ) }">
	<MvIF EXPR = "{ l.reviews_template_id GT 0 }">
		<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.reviews_template_id, l.reviews_template ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ Reviews_Load_Query( l.product_id, l.all_settings:tgr ) }">
			<MvEVAL EXPR = "{ [ g.Store_Template_Path $ l.reviews_template:filename ].Template_Render( l.null, l.all_settings ) }">
		</MvIF>
	</MvIF>
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Product_Reviews" PARAMETERS = "module var, param, all_settings var, product_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvFUNCTIONRETURN VALUE = "{ Reviews_Load_Query( l.product_id, l.output ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Reviews_Load_Query" PARAMETERS = "product_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "g.TGR_Sort"			VALUE = "{ trim( g.TGR_Sort ) }">
	<MvASSIGN NAME = "g.TGR_Offset"			VALUE = "{ trim( int( g.TGR_Offset ) ) }">
	<MvASSIGN NAME = "g.TGR_Count"			VALUE = "{ trim( int( g.TGR_Count ) ) }">
	<MvASSIGN NAME = "g.TGR_Show_Rating"	VALUE = "{ trim( int( g.TGR_Show_Rating ) ) }">
	<MvASSIGN NAME = "g.TGR_Product_ID"		VALUE = "{ trim( int( l.product_id ) ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvIF EXPR = "{ g.TGR_Count EQ 0 }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'reviews_per_page', g.TGR_Count ) }">
	</MvIF>

	<MvIF EXPR = "{	g.TGR_Sort NE '-id'			AND
					g.TGR_Sort NE '-created'	AND
					g.TGR_Sort NE 'created'		AND
					g.TGR_Sort NE '-rating'		AND
					g.TGR_Sort NE 'rating'
				}">
		<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'reviews_default_sorting', g.TGR_Sort ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'approved = 1', '' ) }">

	<MvIF EXPR = "{ g.TGR_Product_ID GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ? ', 'g.TGR_Product_ID' ) }">
	</MvIF>

	<MvIF EXPR = "{ g.TGR_Show_Rating GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'rating = ? ', 'g.TGR_Show_Rating' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.TGR_Sort, 'id:s.id,created:s.created,product_id:s.product_id,cust_id:s.cust_id,order_id:s.order_id,approved:s.approved,rating:s.rating,name:s.name,email:s.email,location:s.location,notify:s.notify,title:s.title,summary:s.summary', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGReviews-ERROR-0015' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Products', l.search_sql, l.search_fields, g.TGR_Offset, g.TGR_Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0016', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvWHILE EXPR = "{ ( NOT TGReviews_Products.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">

		<MvEVAL EXPR = "{ Product_Review_Read( l.output:reviews[++l.count], 'TGReviews_Products' ) }">

		<MvASSIGN NAME = "l.addl_count" VALUE = 0>
		<MvASSIGN NAME = "l.addl_fields" VALUE = "" />

		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields_Product_Review( TGReviews_Products.d.id, l.fields) }">
			<MvIF EXPR = "{ ISNULL l.field:value }">
				<MvFOREACHCONTINUE />
			</MvIF>
			<MvASSIGN NAME = "l.addl_count" VALUE = "{ l.addl_count + 1 }" />
			<MvASSIGN NAME = "l.addl_fields" INDEX = "{ l.addl_count }" MEMBER = "code" VALUE = "{ l.field:code }">
			<MvASSIGN NAME = "l.addl_fields" INDEX = "{ l.addl_count }" MEMBER = "name" VALUE = "{ l.field:name }">
			<MvASSIGN NAME = "l.addl_fields" INDEX = "{ l.addl_count }" MEMBER = "value" VALUE = "{ l.field:value }">
		</MvFOREACH>

		<MvIF EXPR = "{ l.addl_fields }">
			<MvASSIGN NAME = "l.output:reviews" INDEX = "{ l.count }" MEMBER = "additional_fields" VALUE = "{ l.addl_fields }">
		</MvIF>

		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
	</MvWHILE>
	<MvASSIGN NAME = "l.output" MEMBER = "total_reviews_filtered" VALUE = "{ int( l.total_count ) }">
	<MvASSIGN NAME = "l.output" MEMBER = "start_offset" VALUE = "{ int( g.TGR_Offset ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">

	<MvASSIGN NAME = "l.void" VALUE = "{ Product_Rating( l.module, l.param, l.all_settings, l.product_id, l.output:product_rating ) }">

	<MvASSIGN NAME = "l.void" VALUE = "{ Product_Review_Count( l.module, l.param, l.all_settings, l.product_id, l.output:review_count) }">

	<MvCOMMENT>
	|
	|	Pagination
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ l.output:total_reviews_filtered EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>
	<MvASSIGN NAME = "l.output:pagination" MEMBER ="total" VALUE = "{ ceil( l.output:total_reviews_filtered / g.TGR_Count ) }">
	<MvASSIGN NAME = "l.prev_offset" VALUE = "{ g.TGR_Offset - g.TGR_Count }">
	<MvIF EXPR = "{ l.prev_offset GE g.TGR_Count }">
		<MvASSIGN NAME = "l.output:pagination:previous_params" VALUE = "{ 'TGR_Sort=' $ encodeattribute( g.TGR_Sort ) $ '&TGR_Count=' $ encodeattribute( g.TGR_Count ) $ '&TGR_Show_Rating=' $ encodeattribute( g.TGR_Show_Rating ) $ '&TGR_Offset=' $ l.prev_offset }">
	</MvIF>
	<MvASSIGN NAME = "l.next_offset" VALUE = "{ g.TGR_Offset + g.TGR_Count }">
	<MvIF EXPR = "{ l.next_offset LT l.output:total_reviews_filtered }">
		<MvASSIGN NAME = "l.output:pagination:next_params" VALUE = "{ 'TGR_Sort=' $ encodeattribute( g.TGR_Sort ) $ '&TGR_Count=' $ encodeattribute( g.TGR_Count ) $ '&TGR_Show_Rating=' $ encodeattribute( g.TGR_Show_Rating ) $ '&TGR_Offset=' $ l.next_offset }">
	</MvIF>

	<MvASSIGN NAME = "l.output:pagination:current_page" VALUE = "{ ( g.TGR_Offset + g.TGR_Count ) / g.TGR_Count }">
	

	<MvIF EXPR = "{ l.output:pagination:total LE 5 }">
		<MvASSIGN NAME = "l.begin" VALUE = "1" />
	<MvELSE>
		<MvIF EXPR = "{ l.output:pagination:current_page LE 3 }">
			<MvASSIGN NAME = "l.begin" VALUE = "1" />
		<MvELSEIF EXPR = "{ ( l.output:pagination:current_page + 2 ) GE l.output:pagination:total }">
			<MvASSIGN NAME = "l.begin" VALUE = "{ l.output:pagination:total - 4 }">
		<MvELSE>
			<MvASSIGN NAME = "l.begin" VALUE = "{ l.output:pagination:current_page - 2 }">
		</MvIF>
	</MvIF>


	<MvFOR INDEX = "l.page_count" COUNT = "{ l.output:pagination:total }">
		<MvASSIGN NAME = "l.curr_offset" VALUE = "{ ( g.TGR_Count * l.page_count ) - g.TGR_Count }">
		<MvIF EXPR = "{ l.curr_offset EQ g.TGR_Offset }">
			<MvASSIGN NAME = "l.output:full_pagination:pages" INDEX = "{ l.page_count }" MEMBER = "current" VALUE = "1">
		</MvIF>
		<MvASSIGN NAME = "l.output:full_pagination:pages" INDEX = "{ l.page_count }" MEMBER = "page_number" VALUE = "{ l.page_count }">
		<MvASSIGN NAME = "l.output:full_pagination:pages" INDEX = "{ l.page_count }" MEMBER = "params" VALUE = "{ 'TGR_Sort=' $ encodeattribute( g.TGR_Sort ) $ '&TGR_Count=' $ encodeattribute( g.TGR_Count ) $ '&TGR_Show_Rating=' $ encodeattribute( g.TGR_Show_Rating ) $ '&TGR_Offset=' $ l.curr_offset }">
	</MvFOR>

	<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_copy( l.output:full_pagination:pages, l.begin, 5, l.output:pagination:pages, 0) }">

	<MvASSIGN NAME = "l.void" VALUE = "{ Product_Rating( l.module, l.param, l.all_settings, l.product_id, l.output:avg_rating ) }">

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Rating" PARAMETERS = "module var, param, all_settings var, product_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':rating' ) }">
		<MvASSIGN NAME = "l.return" VALUE = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':rating' ) }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>

	<MvASSIGN NAME = "g.TGR_Product_ID" VALUE = "{ l.product_id }">

	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'AVG( rating ) as rating' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvIF EXPR = "{ g.TGR_Product_ID }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ?', 'g.TGR_Product_ID' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'approved = 1', '' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0017', g.MvOPENVIEW_Error ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Products', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0018', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.rating_num" VALUE = "1">

	<MvWHILE EXPR = "{ ( NOT TGReviews_Products.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.rating_num LT ( g.Count + 1) ) ) }">

		<MvASSIGN NAME = "l.return"  VALUE = "{ rnd( TGReviews_Products.d.rating, 2 ) }">
		<MvASSIGN NAME = "{ 'g.Session:cache:TGR:Product_' $ l.product_id $ ':rating' }" VALUE = "{ l.return }">

		<MvASSIGN NAME = "l.rating_num" VALUE = "{ l.rating_num + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Review_Count" PARAMETERS = "module var, param, all_settings var, product_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':review_count' ) }">
		<MvASSIGN NAME = "l.return" VALUE = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':review_count' ) }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>
	<MvASSIGN NAME = "g.Temp_Product_ID" VALUE = "{ l.product_id }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'approved = 1', '' ) }">

	<MvIF EXPR = "{ g.Temp_Product_ID GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ? ', 'g.Temp_Product_ID' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.return ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGReviews-ERROR-0019' ) }">
	</MvIF>

	<MvASSIGN NAME = "{ 'g.Session:cache:TGR:Product_' $ l.product_id $ ':review_count' }" VALUE = "{ l.return }">

	<MvASSIGN NAME = "g.Temp_Product_ID" VALUE = "">

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Review_Breakdowns" PARAMETERS = "module var, param, all_settings var, product_id, return var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':breakdowns' ) }">
		<MvASSIGN NAME = "l.return" VALUE = "{ miva_variable_value( 'g.Session:cache:TGR:Product_' $ l.product_id $ ':breakdowns' ) }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>

	<MvASSIGN NAME = "g.TGR_Product_ID" VALUE = "{ l.product_id }">

	<MvFOR INDEX = "l.rating_num" COUNT = "5">
		<MvASSIGN NAME = "l.return" INDEX = "{ l.rating_num }" MEMBER = "rating" VALUE = "{ l.rating_num }">
		<MvASSIGN NAME = "l.return" INDEX = "{ l.rating_num }" MEMBER = "count" VALUE = "0">
	</MvFOR>

	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'count( rating) as rating_count, rating' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvIF EXPR = "{ g.TGR_Product_ID }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ?', 'g.TGR_Product_ID' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'approved = 1', '' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_GROUP_BY( l.search_query, 'rating' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0020', g.MvOPENVIEW_Error ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Products', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0021', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.rating_num" VALUE = "1">

	<MvWHILE EXPR = "{ ( NOT TGReviews_Products.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.rating_num LT ( g.Count + 1) ) ) }">

		<MvASSIGN NAME = "l.return" INDEX = "{ TGReviews_Products.d.rating }" MEMBER = "rating" VALUE = "{ TGReviews_Products.d.rating }">
		<MvASSIGN NAME = "l.return" INDEX = "{ TGReviews_Products.d.rating }" MEMBER = "count" VALUE = "{ TGReviews_Products.d.rating_count }">

		<MvASSIGN NAME = "l.rating_num" VALUE = "{ l.rating_num + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">
	<MvASSIGN NAME = "l.rating_num" VALUE = "1">

	<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.void" VALUE = "{ QuickSortArray( l.return, ':rating', -1 ) }" />

	<MvASSIGN NAME = "{ 'g.Session:cache:TGR:Product_' $ l.product_id $ ':breakdowns' }" VALUE = "{ l.return }">

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Date" PARAMETERS = "module var, param, all_settings var, format, timestamp, return var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Date( format, timestamp, return var )
	|
	</MvCOMMENT>


	<MvCOMMENT>
	|
	| Using some of PHP's Date Formatting
	|
	|	DAY
	|		d, j, N, S, z, l, D
	|
	|	MONTH
	|		m, n, F, M
	|
	|	YEAR
	|		Y, y, L
	|
	|	TIME
	|		a, A, g, G, h, H, i, s
	|
	|	FULL DATE/TIME
	|		c
	|
	</MvCOMMENT>


	<MvASSIGN NAME = "l.time_zone"	VALUE = "{ g.Merchant_Local_Timezone }">

	<MvASSIGN NAME = "l.output" VALUE = "">

	<MvASSIGN NAME = "l.months_long" VALUE = "{ miva_array_deserialize( 'January,February,March,April,May,June,July,August,September,October,November,December' ) }">
	<MvASSIGN NAME = "l.months_short" VALUE = "{ miva_array_deserialize( 'Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sept,Oct,Nov,Dec' ) }">

	<MvASSIGN NAME = "l.days_long" VALUE = "{ miva_array_deserialize( 'Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday' ) }">
	<MvASSIGN NAME = "l.days_short" VALUE = "{ miva_array_deserialize( 'Sun,Mon,Tues,Wed,Thurs,Fri,Sat' ) }">

	<MvFOR INDEX = "l.pos" COUNT = "{ len_var( l.format ) }">
		<MvASSIGN NAME = "l.char" VALUE = "{ substring_var( l.format, l.pos, 1 ) }">

		<MvIF EXPR = "{ NOT ( l.char CIN 'djNSzlDmnFMYyLaAgGhHisc' ) }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.char }">
			<MvFORCONTINUE />
		</MvIF>

		<MvIF EXPR = "{ l.char EQ 'd' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_dayofmonth( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'j' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofmonth( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'N' }">
			<MvCOMMENT>
			|
			| (Sunday=1) :|
			|
			</MvCOMMENT>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofweek( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'S' }">
			<MvASSIGN NAME = "l.dow" VALUE = "{ time_t_dayofmonth( l.timestamp, l.time_zone ) }">
			<MvASSIGN NAME = "l.dow_a" VALUE = "{ l.dow MOD 10 }">
			<MvASSIGN NAME = "l.dow_b" VALUE = "{ l.dow MOD 100 }">

			<MvIF EXPR = "{ ( l.dow_a EQ 1 ) AND ( l.dow_b NE 11) }">
				<MvASSIGN NAME = "l.S" VALUE = "st">
			<MvELSEIF EXPR = "{ ( l.dow_a EQ 2) AND ( l.dow_b NE 12 ) }">
				<MvASSIGN NAME = "l.S" VALUE = "nd">
			<MvELSEIF EXPR = "{ ( l.dow_a EQ 3 ) AND ( l.dow_b NE 13 ) }">
				<MvASSIGN NAME = "l.S" VALUE = "rd">
			<MvELSE>
				<MvASSIGN NAME = "l.S" VALUE = "th">
			</MvIF>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.S }">
		<MvELSEIF EXPR = "{ l.char EQ 'z' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_dayofyear( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'D' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.days_short[ ' $ time_t_dayofweek( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'l' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.days_long[ ' $ time_t_dayofweek( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'm' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_month( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'n' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_month( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'F' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.months_long[ ' $ time_t_month( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'M' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ miva_variable_value( 'l.months_short[ ' $ time_t_month( l.timestamp, l.time_zone ) $ ' ]') }">
		<MvELSEIF EXPR = "{ l.char EQ 'Y' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_year( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'y' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ substring_var( time_t_year( l.timestamp, l.time_zone ), 3, 2) }">
		<MvELSEIF EXPR = "{ l.char EQ 'L' }">
			<MvASSIGN NAME = "l.year" VALUE = "{ time_t_year( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ ( ( ( l.year MOD 400 ) EQ 0 ) OR ( ( l.year MOD 100 ) NE 0 ) ) AND ( ( l.year MOD 4 ) EQ 0 ) }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ '1' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ '0' }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'a' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 11 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'pm' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'am' }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'A' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 11 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'PM' }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ 'AM' }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'g' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 12 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ ( l.hour - 12 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.hour }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'G' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ time_t_hour( l.timestamp, l.time_zone ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'h' }">
			<MvASSIGN NAME = "l.hour" VALUE = "{ time_t_hour( l.timestamp, l.time_zone ) }">
			<MvIF EXPR = "{ l.hour GT 12 }">
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( ( l.hour - 12 ), 2, 0 ) }">
			<MvELSE>
				<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( l.hour, 2, 0 ) }">
			</MvIF>
		<MvELSEIF EXPR = "{ l.char EQ 'H' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_hour( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'i' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_min( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 's' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ padl( time_t_sec( l.timestamp, l.time_zone ), 2, 0 ) }">
		<MvELSEIF EXPR = "{ l.char EQ 'c' }">
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $
								padl( time_t_year( l.timestamp, l.time_zone ), 4, '0' )			$
								 padl( time_t_month( l.timestamp, l.time_zone ), 2, '0' ) 		$
								 padl( time_t_dayofmonth( l.timestamp, l.time_zone ), 2, '0' )	$
								 'T' 															$
								 padl( time_t_hour( l.timestamp, l.time_zone ), 2, '0' )		$
								 padl( time_t_min( l.timestamp, l.time_zone ), 2, '0' )			$
								 padl( time_t_sec( l.timestamp, l.time_zone ), 2, '0' )			$
								 'Z' }">
		<MvELSE>
			<MvASSIGN NAME = "l.output" VALUE = "{ l.output $ l.char }">
		</MvIF>

	</MvFOR>

	<MvASSIGN NAME = "l.return" VALUE = "{ l.output }">

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Review_Check_Verified" PARAMETERS = "email, product_id" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "Review_CheckXLoad"
				QUERY	= "{	'SELECT
									o.id
								FROM ' 
									$ g.Store_Table_Prefix $ 'Orders o
								LEFT JOIN ' 
									$ g.Store_Table_Prefix $ 'OrderItems oi
								ON
									oi.order_id = o.id
								WHERE
									( o.bill_email = ? OR o.ship_email = ? ) AND
									oi.product_id = ?
								LIMIT 1' }"
				FIELDS	= "l.email, l.email, l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-1013', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output" MEMBER = "id" VALUE = "{ Review_CheckXLoad.d.id }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "Review_CheckXLoad">
		
	<MvIF EXPR = "{ NOT l.output:id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "Trigger_Merchant_Email" PARAMETERS = "review_id" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'merchant_email', l.merchant_email ) }">
	<MvASSIGN NAME = "l.merchant_email" VALUE = "{ miva_array_deserialize( l.merchant_email ) }">

	<MvIF EXPR = "{ l.merchant_email:notify NE 1 }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.merchant_email:to OR ISNULL l.merchant_email:from OR ISNULL l.merchant_email:subject }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ Trigger_Email( l.review_id, l.order, 'TGR_Merchant_Email', l.merchant_email ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Trigger_Customer_Email" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'customer_email', l.customer_email ) }">
	<MvASSIGN NAME = "l.customer_email" VALUE = "{ miva_array_deserialize( l.customer_email ) }">
	<MvASSIGN NAME = "l.customer_email:to" VALUE = "{ l.review:email }">

	<MvIF EXPR = "{ ( ISNULL l.customer_email:to ) OR ( ISNULL l.customer_email:from ) OR ( ISNULL l.customer_email:subject ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ ( l.review:approved EQ 1 ) AND ( l.review:notify EQ 1 ) AND ( l.review:notified EQ 0 ) }">
		<MvIF EXPR = "{ Trigger_Email( l.review:id, l.order, 'TGR_Customer_Email', l.customer_email ) }">
			<MvASSIGN NAME = "l.review:notified" VALUE = "{ s.dyn_time_t }" />
			<MvASSIGN NAME = "l.void" VALUE = "{ Product_Reviews_Update( l.review ) }">
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Trigger_MailAfter_Email" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'mail_after', l.mail_after ) }">
	<MvASSIGN NAME = "l.mail_after" VALUE = "{ miva_array_deserialize( l.mail_after ) }">

	<MvIF EXPR = "{ l.mail_after:notify NE 1 }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSIGN NAME = "l.mail_after:ts_check" VALUE = "{ s.dyn_time_t - ( 86400 * l.mail_after:days ) }">

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_Orders"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Orders' }">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0023', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "0">

	<MvWHILE EXPR = "{ NOT TGReviews_Orders.d.EOF }">
		<MvASSIGN NAME = "l.void" VALUE = "{ MailAfter_Check_Order( TGReviews_Orders.d.order_id, l.mail_after ) }">
		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Orders" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Orders">
	
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "MailAfter_Check_Order" PARAMETERS = "order_id, email_settings var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Remove_Order( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>

	<MvIF EXPR = "{ ( l.order:status EQ 600 ) OR ( l.order:status EQ 300 ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ Remove_Order( l.order:id ) }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>

	<MvIF EXPR = "{ ( l.email_settings:after EQ 'order' ) AND ( l.order:orderdate LE l.email_settings:ts_check) }">
		<MvIF EXPR = "{ Trigger_MailAfter_Email_Lowlevel( l.order, l.email_settings ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ Remove_Order( l.order:id ) }">
			<MvFUNCTIONRETURN VALUE = 1 />
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ ( l.email_settings:after EQ 'ship' ) AND ( l.order:status EQ 200 ) }">
		<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].OrderShipmentList_Load_Order( l.order:id, l.order:shipments ) }">
			<MvFUNCTIONRETURN VALUE = 1 />
		</MvIF>

		<MvIF EXPR = "{ l.order:shipments[1]:ship_date LT l.email_settings:ts_check }">
			<MvIF EXPR = "{ Trigger_MailAfter_Email_Lowlevel( l.order, l.email_settings ) }">
				<MvASSIGN NAME = "l.void" VALUE = "{ Remove_Order( l.order:id ) }">
				<MvFUNCTIONRETURN VALUE = 1 />
			</MvIF>
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Trigger_MailAfter_Email_Lowlevel" PARAMETERS = "order var, email_settings var" STANDARDOUTPUTLEVEL = "">
	<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.load_items" VALUE = "{ OrderItemList_Load_Order( l.order:id, l.order_items) }">
	<MvFOREACH ITERATOR = "l.item" ARRAY = "l.order_items">
		<MvIF EXPR = "{ Review_Check_EmailXProduct( l.order:bill_email, l.item:product_id) }">
			<MvFOREACHCONTINUE />
		</MvIF>
		<MvDO FILE = "{ g.Module_Library_DB }" NAME = "l.load_options" VALUE = "{ OrderOptionList_Load_Line( l.item:line_id, l.item:options) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert_var( l.order:items, l.item, -1 ) }">
	</MvFOREACH>
	<MvIF EXPR = "{ miva_array_elements( l.order:items ) EQ 0 }">
		<MvFUNCTIONRETURN VALUE = 1 />
	</MvIF>
	<MvASSIGN NAME = "l.void" VALUE = "{ Trigger_Email( 0, l.order, 'TGR_MailAfter_Email', l.email_settings ) }">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Trigger_Email" PARAMETERS = "review_id, order var, page_code, email var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ l.review_id GT 0 }">
		<MvIF EXPR = "{ NOT Product_Review_WithFields_Load_ID( l.review_id, l.review ) }">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.order:id GT 0 }">
		<MvIF EXPR = "{ NOT l.email:to }">
			<MvASSIGN NAME = "l.email:to" VALUE = "{ l.order:bill_email }">
		</MvIF>
	</MvIF>

	<MvDO FILE = "{ g.Module_Feature_TUI_DB }" NAME = "l.loaded" VALUE = "{ Page_Load_Code( l.page_code, l.page) }">

	<MvIF EXPR = "{ [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.page:templ_id, l.email_tmpl ) }">

		<MvCOMMENT>
		|
		| Load and initialize items
		|
		</MvCOMMENT>

		<MvASSIGN NAME = "l.item_pos"			VALUE = 1>
		<MvASSIGN NAME = "l.item_count"			VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemModuleList_Load_Page_Render( l.page:id,			l.page:settings:_mgr ) }">
		<MvASSIGN NAME = "l.extension_count"	VALUE = "{ [ g.Module_Feature_TUI_DB ].ItemExtensionModuleList_Load_Page_Render( l.page:id,	l.page:settings:_mgr ) }">

		<MvWHILE EXPR = "{ l.item_pos LE l.item_count }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Initialize_Item_LowLevel( l.page:settings, l.page:settings:_mgr:items[ l.item_pos ] ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ g.TemplateManager_Exception }">
				<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0024', 'Item \'' $ l.page:settings:_mgr:items[ l.item_pos ]:item_code $ '\' threw exception \'' $ g.TemplateManager_Exception_Code $ '\' during initialization' ) }">
			</MvIF>

			<MvASSIGN NAME = "l.item_pos"	VALUE = "{ l.item_pos + 1 }">
		</MvWHILE>
		<MvASSIGN NAME = "l.all_settings" VALUE = "{ l.page:settings }">
		<MvASSIGN NAME = "l.all_settings:review" VALUE = "{ l.review }">
		<MvASSIGN NAME = "l.all_settings:order" VALUE = "{ l.order }">

		<MvCAPTURE VARIABLE = "l.email:message">
			<MvDO FILE = "{ g.Store_Template_Path $ l.email_tmpl:filename }" NAME = "l.success" VALUE = "{ Template_Render( l.settings, l.all_settings ) }">
		</MvCAPTURE>

		<MvIF EXPR = "{ ISNULL trim( l.email:message ) }">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>

		<MvASSIGN NAME ="l.email:headers" VALUE = "{ 'Content-Type: text/html; charset=ISO-8859-1' $ asciichar( 13 ) $ asciichar( 10 ) $ asciichar( 13 ) $ asciichar( 10 ) }">

		<MvDO FILE = "{ g.Module_Library_Utilities }" NAME = "l.email_sent"  VALUE = "{ v9_SendEmail( l.email ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Reviews_Add_Order" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_Orders
					      ( order_id )
						  VALUES
						  ( ? )' }"
			 FIELDS	= "l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0025', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Remove_Order" PARAMETERS = "order_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Orders WHERE order_id = ?' }"
			 FIELDS	= "l.order_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0026', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Review_Check_EmailXProduct" PARAMETERS = "email, product_id" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_EmailXProduct"
				QUERY	= "{ 'SELECT id FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products WHERE email = ? AND product_id = ?' }"
				FIELDS	= "l.email, l.product_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-ERROR-0027', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvWHILE EXPR = "{ NOT TGReviews_EmailXProduct.d.EOF }">
		<MvASSIGN NAME = "l.found" VALUE = "1" />
		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_EmailXProduct" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_EmailXProduct">

	<MvIF EXPR = "{ l.found NE 1 }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Test_MailAfter_Email" PARAMETERS = "module var, param, all_settings var, order_id, email" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Order_Load_ID( l.order_id, l.order ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'mail_after', l.mail_after ) }">
	<MvASSIGN NAME = "l.mail_after" VALUE = "{ miva_array_deserialize( l.mail_after ) }">
	<MvASSIGN NAME = "l.mail_after:to" VALUE = "{ l.email }">
	<MvASSIGN NAME = "l.mail_after:cc" VALUE = "" />
	<MvASSIGN NAME = "l.mail_after:bcc" VALUE = "" />
	<MvASSIGN NAME = "l.void" VALUE = "{ Trigger_MailAfter_Email_Lowlevel( l.order, l.mail_after ) }">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "reCAPTCHA" PARAMETERS = "secret, response" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.response }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvASSIGN NAME = "l.remoteip"	VALUE = "{ s.remote_addr }">

	<MIVA MvCALL_ERROR = "nonfatal, nodisplay">
	<MvCALL METHOD = "POST"
			ACTION = "https://www.google.com/recaptcha/api/siteverify"
			FIELDS = "l.secret, l.response, l.remoteip">
			<MvASSIGN NAME = "l.google_response" VALUE = "{ l.google_response $ s.callvalue }">
	</MvCALL>
	<MIVA MvCALL_ERROR = "fatal, display">

	<MvFUNCTIONRETURN VALUE = "{ miva_json_decode( l.google_response, l.data ) AND l.data:success }">
</MvFUNCTION>