<MvCOMMENT>
|
|	Function List
|		Product_Review_Read
|		Product_Review_Load_ID
|		Product_Reviews_Insert_Lowlevel
|		Product_Reviews_Insert
|		Product_Reviews_Update_Lowlevel
|		Product_Reviews_Update
|		Product_Reviews_Delete
|		Product_Reviews_Load_Query
|
|		JSON_Product_Reviews_Update
|		JSON_Product_Reviews_Insert
|		JSON_Product_Reviews_Delete
|		JSON_Load_Additional_Fields
|
|		Load_Additional_Fields
|		Load_Additional_Fields_Product_Review
|		Load_Additional_Value
|		Product_Reviews_AdditionalValues_Insert_LowLevel
|
|		AdditionalField_Load_ID
|		AdditionalField_Load_Code
|		AdditionalValue_Load
|		AdditionalValues_Update
|		AdditionalValues_Insert
|		AdditionalValues_Delete_Review
|
|		AdditionalFields_Update
|		AdditionalFields_Insert
|		AdditionalFields_Delete
|
|		AdditionalFields_Load_Query
|		JSON_AdditionalFields_Update
|		JSON_AdditionalFields_Insert
|		JSON_AdditionalFields_Delete
|
</MvCOMMENT>

<MvFUNCTION NAME = "Product_Review_Read" PARAMETERS = "review var">
	<MvASSIGN NAME = "l.review" MEMBER = "id"			VALUE = "{ Product_Review.d.id }">
	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ Product_Review.d.created }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ Product_Review.d.product_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ Product_Review.d.cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ Product_Review.d.order_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ Product_Review.d.approved }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ Product_Review.d.rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ Product_Review.d.name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ Product_Review.d.email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ Product_Review.d.location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ Product_Review.d.notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ Product_Review.d.title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ Product_Review.d.summary }">
</MvFUNCTION>


<MvFUNCTION NAME = "Product_Review_Load_ID" PARAMETERS = "id, review var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGReviews_Products_Load"
				QUERY 	= "{ 'SELECT *  FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products  WHERE id = ? '}"
				FIELDS	= "l.id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-LOAD-0001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ TGReviews_Products_Load.d.EOF }">
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products_Load">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGReviews-LOAD-0002' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ Product_Review_Read( l.review ) }">
	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products_Load">


	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Insert_Lowlevel" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.review:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGRProduct' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_Products
					      ( id, created, product_id, cust_id, order_id, approved, rating, name, email, location, notify, title, summary )
						  VALUES
						  ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )' }"
			 FIELDS	= "l.review:id, l.review:created, l.review:product_id, l.review:cust_id, l.review:order_id, l.review:approved, l.review:rating, l.review:name, l.review:email, l.review:location, l.review:notify, l.review:title, l.review:summary">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-INSERT-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Insert" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.review:product_id }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "product_id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Missing Product.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ ( ISNULL l.review:rating ) OR ( l.review:rating LE 0 ) OR ( l.review:rating GT 5 ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "rating">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Rating value should be 1-5.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.review:cust_id }">		<MvASSIGN NAME = "l.review:cust_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:order_id }">	<MvASSIGN NAME = "l.review:order_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:approved }">	<MvASSIGN NAME = "l.review:approved" VALUE = "0">	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Insert_Lowlevel( l.review ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Update_Lowlevel" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review:id, l.old_review ) }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_Products
					      SET
							created		= ?,
							product_id	= ?,
							cust_id		= ?,
							order_id	= ?,
							approved	= ?,
							rating		= ?,
							name		= ?,
							email		= ?,
							location	= ?,
							notify		= ?,
							title		= ?,
							summary		= ?
					      WHERE
						    id			= ?' }"
			 FIELDS	= "l.review:created, l.review:product_id, l.review:cust_id, l.review:order_id, l.review:approved, l.review:rating, l.review:name, l.review:email, l.review:location, l.review:notify, l.review:title, l.review:summary, l.review:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-UPDATE-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Update" PARAMETERS = "review var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL l.review:product_id }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "product_id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Missing Product.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>
	<MvIF EXPR = "{ ( ISNULL l.review:rating ) OR ( l.review:rating LE 0 ) OR ( l.review:rating GT 5 ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "rating">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Rating value should be 1-5.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.review:cust_id }">		<MvASSIGN NAME = "l.review:cust_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:order_id }">	<MvASSIGN NAME = "l.review:order_id" VALUE = "0">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.review:approved }">	<MvASSIGN NAME = "l.review:approved" VALUE = "0">	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Update_LowLevel( l.review ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ g.Review_Field_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_Delete" PARAMETERS = "review_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_Products WHERE id = ?' }"
			 FIELDS	= "l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-DELETE-0001', g.MvQUERY_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalValues_Delete_Review( l.review_id ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>


<MvFUNCTION NAME = "Product_Reviews_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*, p.code as product_code, p.name as product_name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Products', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_LEFT_OUTER_JOIN( l.search_query, 's', g.Store_Table_Prefix $ 'Products', 'p', 's.product_id = p.id', '' ) }">

	<MvIF EXPR = "{ g.Product_ID GT 0 }">
		<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'product_id = ? ', 'g.Product_ID' ) }">
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,created:s.created,product_id:s.product_id,cust_id:s.cust_id,order_id:s.order_id,approved:s.approved,rating:s.rating,name:s.name,email:s.email,location:s.location,notify:s.notify,title:s.title,summary:s.summary,product_name:p.name,product_code:p.code,addl_test:addl_test' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,created:s.created,product_id:s.product_id,cust_id:s.cust_id,order_id:s.order_id,approved:s.approved,rating:s.rating,name:s.name,email:s.email,location:s.location,notify:s.notify,title:s.title,summary:s.summary,product_name:p.name,product_code:p.code,addl_test:addl_test', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Products', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-JSON-0001', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGReviews_Products.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGReviews_Products.d.id ) }">,
					"created": <MvEVAL EXPR = "{ int( TGReviews_Products.d.created ) }">,
					"product_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.product_id ) }">,
					"cust_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.cust_id ) }">,
					"order_id" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.order_id ) }">,
					"approved" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.approved ) }">,
					"rating" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.rating ) }">,
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.name ) }">",
					"email" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.email ) }">",
					"location" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.location ) }">",
					"notify" : <MvEVAL EXPR = "{ int( TGReviews_Products.d.notify ) }">,
					"title" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.title ) }">",
					"summary" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.summary ) }">",
					"product_code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.product_code ) }">",
					"product_name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_Products.d.product_name ) }">"
					<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields_Product_Review( TGReviews_Products.d.id, l.fields) }">
						,
						"AdditionalFields_<MvEVAL EXPR = "{ l.field:code }">": "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( l.field:value ) }">"
					</MvFOREACH>
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Products" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Products">
	}

</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Product_Code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a Product Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.Product_Code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a valid Product Code.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "id"			VALUE = "{ g.id }">
	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ g.created }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ g.cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ g.order_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ g.approved }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ g.rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ g.name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ g.email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ g.location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ g.notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ g.title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ g.summary }">

	<MvIF EXPR = "{ NOT Product_Reviews_Update( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvIF EXPR = "{ NOT ISNULL ( g.AdditionalFields ) }">
		<MvIF EXPR = "{ NOT Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( g.id, g.AdditionalFields ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AdditionalFields_' $ g.Review_Field_Error, g.Review_Error ) }">
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>


<MvFUNCTION NAME = "JSON_Product_Reviews_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Product_Code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a Product Code.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].Product_Load_Code( g.Product_Code, l.product ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'product_code', 'Please select a valid Product Code.' ) }">
	</MvIF>

	<MvASSIGN NAME = "l.review" MEMBER = "created"		VALUE = "{ g.created }">
	<MvASSIGN NAME = "l.review" MEMBER = "product_id"	VALUE = "{ l.product:id }">
	<MvASSIGN NAME = "l.review" MEMBER = "cust_id"		VALUE = "{ g.cust_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "order_id"		VALUE = "{ g.order_id }">
	<MvASSIGN NAME = "l.review" MEMBER = "approved"		VALUE = "{ g.approved }">
	<MvASSIGN NAME = "l.review" MEMBER = "rating"		VALUE = "{ g.rating }">
	<MvASSIGN NAME = "l.review" MEMBER = "name"			VALUE = "{ g.name }">
	<MvASSIGN NAME = "l.review" MEMBER = "email"		VALUE = "{ g.email }">
	<MvASSIGN NAME = "l.review" MEMBER = "location"		VALUE = "{ g.location }">
	<MvASSIGN NAME = "l.review" MEMBER = "notify"		VALUE = "{ g.notify }">
	<MvASSIGN NAME = "l.review" MEMBER = "title"		VALUE = "{ g.title }">
	<MvASSIGN NAME = "l.review" MEMBER = "summary"		VALUE = "{ g.summary }">

	<MvIF EXPR = "{ NOT Product_Reviews_Insert( l.review ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT ISNULL ( g.AdditionalFields ) }">
		<MvIF EXPR = "{ NOT Product_Reviews_AdditionalValues_InsertUpdate_LowLevel( l.review:id, g.AdditionalFields ) }">
			<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'AdditionalFields_' $ g.Review_Field_Error, g.Review_Error ) }">
		</MvIF>
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Load_Additional_Fields" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvASSIGN NAME = "l.dnum" VALUE = "1">
	{
	"success": 1,
	"data": [
		<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields( l.fields ) }">
			<MvIF EXPR = "{ l.dnum GT 1 }">,</MvIF>
			{
				"id": "<MvEVAL EXPR ="{ int( l.field:id ) }">",
				"code": "<MvEVAL EXPR ="{ [ g.Module_JSON ].JSON_Encode( l.field:code ) }">",
				"name": "<MvEVAL EXPR ="{ [ g.Module_JSON ].JSON_Encode( l.field:name ) }">"
			}
			<MvASSIGN NAME = "l.dnum" VALUE = "{ l.dnum + 1 }">
		</MvFOREACH>
		]
	}
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_Product_Reviews_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, compresswhitespace">
	<MvIF EXPR = "{ ISNULL g.Review_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has occured.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Reviews_Delete( g.Review_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'An Error has occured.' ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Fields" PARAMETERS = "fields var" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.fields" VALUE = "">

	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields' }">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-LOAD-0003', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = "0">

	<MvWHILE EXPR = "{ NOT TGReviews_AdditionalFields.d.EOF }">
		<MvASSIGN NAME = "l.count" VALUE = "{ l.count + 1 }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.count }" MEMBER = "id" VALUE = "{ TGReviews_AdditionalFields.d.id }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.count }" MEMBER = "code" VALUE = "{ TGReviews_AdditionalFields.d.code }">
		<MvASSIGN NAME = "l.fields" INDEX = "{ l.count }" MEMBER = "name" VALUE = "{ TGReviews_AdditionalFields.d.name }">
		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_AdditionalFields" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvFUNCTIONRETURN VALUE = "{ l.count }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Fields_Product_Review" PARAMETERS = "review_id, fields var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ Load_Additional_Fields( l.fields ) }">
		<MvASSIGN NAME = "l.field" MEMBER = "value" VALUE = "{ Load_Additional_Value( l.review_id, l.field:id ) }">
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = "{ miva_array_elements( l.fields ) }">
</MvFUNCTION>

<MvFUNCTION NAME = "Load_Additional_Value" PARAMETERS = "review_id, field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.review ) }">
		<MvFUNCTIONRETURN VALUE = "" />
	</MvIF>

	<MvOPENVIEW NAME	= "Merchant"
				VIEW 	= "TGReviews_AdditionalValues"
				QUERY 	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE rating_id = ? AND field_id = ? ' }"
				FIELDS	= "l.review_id, l.field_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-1004:', 'An error occured while checking a record. Error:' $ g.MvQUERY_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.return"  VALUE = "{ TGReviews_AdditionalValues.d.value }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalValues">

	<MvFUNCTIONRETURN VALUE = "{ l.return }">
</MvFUNCTION>

<MvFUNCTION NAME = "Product_Reviews_AdditionalValues_InsertUpdate_LowLevel" PARAMETERS = "review_id, values var" STANDARDOUTPUTLEVEL = "">
	<MvFOREACH ITERATOR = "l.member" ARRAY = "l.members" COUNT = "{ miva_struct_members( l.values, l.members) }">
		<MvIF EXPR = "{ NOT AdditionalField_Load_Code( l.member, l.addlfield ) }">
			<MvFOREACHCONTINUE />
		</MvIF>
		<MvIF EXPR = "{ AdditionalValue_Load( l.addlfield:id, l.review_id, l.value ) }">
			<MvIF EXPR = "{ NOT AdditionalValues_Update( l.addlfield:id, l.review_id, miva_variable_value( 'l.values:' $ l.member ) ) }">
				<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ l.member }">
				<MvFUNCTIONRETURN VALUE = "0" />
			</MvIF>
		<MvELSE>
			<MvIF EXPR = "{ NOT AdditionalValues_Insert( l.addlfield:id, l.review_id, miva_variable_value( 'l.values:' $ l.member ) ) }">
				<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "{ l.member }">
				<MvFUNCTIONRETURN VALUE = "0" />
			</MvIF>
		</MvIF>
	</MvFOREACH>
	<MvFUNCTIONRETURN VALUE = "1" />
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalField_Load_ID" PARAMETERS = "id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE id = ?' }"
				FIELDS	= "l.id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-LOAD-0005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output" MEMBER = "id" VALUE = "{ TGReviews_AdditionalFields.d.id }">
	<MvASSIGN NAME = "l.output" MEMBER = "code" VALUE = "{ TGReviews_AdditionalFields.d.code }">
	<MvASSIGN NAME = "l.output" MEMBER = "name" VALUE = "{ TGReviews_AdditionalFields.d.name }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvIF EXPR = "{ NOT l.output:id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalField_Load_Code" PARAMETERS = "code, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalFields"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE code = ?' }"
				FIELDS	= "l.code">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-LOAD-0005', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output" MEMBER = "id" VALUE = "{ TGReviews_AdditionalFields.d.id }">
	<MvASSIGN NAME = "l.output" MEMBER = "code" VALUE = "{ TGReviews_AdditionalFields.d.code }">
	<MvASSIGN NAME = "l.output" MEMBER = "name" VALUE = "{ TGReviews_AdditionalFields.d.name }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">

	<MvIF EXPR = "{ NOT l.output:id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValue_Load" PARAMETERS = "field_id, review_id, output var" STANDARDOUTPUTLEVEL = "">
	<MvOPENVIEW	NAME	= "Merchant"
				VIEW	= "TGReviews_AdditionalValues"
				QUERY	= "{ 'SELECT * FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE field_id = ? AND rating_id = ?' }"
				FIELDS	= "l.field_id, l.review_id">

	<MvIF EXPR = "{ g.MvOPENVIEW_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-LOAD-0006', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.output" MEMBER = "field_id" VALUE = "{ TGReviews_AdditionalValues.d.field_id }">
	<MvASSIGN NAME = "l.output" MEMBER = "rating_id" VALUE = "{ TGReviews_AdditionalValues.d.rating_id }">
	<MvASSIGN NAME = "l.output" MEMBER = "value" VALUE = "{ TGReviews_AdditionalValues.d.value }">

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalValues">
		
	<MvIF EXPR = "{ NOT l.output:field_id }">
		<MvFUNCTIONRETURN VALUE = "0">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = "1">
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Update" PARAMETERS = "field_id, review_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.output ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'field_id ' $ l.field_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.old_review ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'review_id ' $ l.review_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues
					      SET
							value		= ?
					      WHERE
						    field_id	= ?
						   AND
						   	rating_id	= ?' }"
			 FIELDS	= "l.value, l.field_id, l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-UPDATE-0002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Insert" PARAMETERS = "field_id, review_id, value" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.output ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'field_id ' $ l.field_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvIF EXPR = "{ NOT Product_Review_Load_ID( l.review_id, l.old_review ) }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ 'review_id ' $ l.review_id $ ' does not exsist' }">
		<MvFUNCTIONRETURN VALUE = "0" />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues
					      ( field_id, rating_id, value )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.field_id, l.review_id, l.value">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-INSERT-0002', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalValues_Delete_Review" PARAMETERS = "review_id" STANDARDOUTPUTLEVEL = "">
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE rating_id = ?' }"
			 FIELDS	= "l.review_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-DELETE-0002', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Update" PARAMETERS = "field" STANDARDOUTPUTLEVEL = "">
	<MvASSIGN NAME = "l.field:id" 	VALUE = "{ trim( l.field:id ) }">
	<MvASSIGN NAME = "l.field:code"	VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:name"	VALUE = "{ trim( l.field:name ) }">

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:name }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "name">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Name is required.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field:id, l.old_field ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "id">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Invalid Field">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.field:code NE l.old_field:code }">
		<MvIF EXPR = "{ AdditionalField_Load_Code( l.field:code, l.code_exist ) }">
			<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
			<MvASSIGN NAME = "g.Review_Error" VALUE = "Code already exsist.">
			<MvFUNCTIONRETURN VALUE = 0 />
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields
					      SET
							code	= ?,
							name	= ?
					      WHERE
						    id			= ?' }"
			 FIELDS	= "l.field:code,l.field:name,l.field:id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-UPDATE-0003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Insert" PARAMETERS = "field" STANDARDOUTPUTLEVEL = "">

	<MvASSIGN NAME = "l.field:code"	VALUE = "{ trim( l.field:code ) }">
	<MvASSIGN NAME = "l.field:name"	VALUE = "{ trim( l.field:name ) }">

	<MvIF EXPR = "{ ISNULL l.field:code }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ ISNULL l.field:name }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "name">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Name is required.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ AdditionalField_Load_Code( l.field:code, l.code_exist ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Code already exsist.">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Admin ].Validate_Code( l.field:code ) }">
		<MvASSIGN NAME = "g.Review_Field_Error" VALUE = "code">
		<MvASSIGN NAME = "g.Review_Error" VALUE = "Please enter a Valid Code.">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvASSIGN NAME = "l.field:id" VALUE = "{ [ g.Module_Library_DB ].StoreKey_Generate( 'TGRAdditional' ) }">

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'INSERT INTO ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields
					      ( id, code, name )
						  VALUES
						  ( ?, ?, ? )' }"
			 FIELDS	= "l.field:id,l.field:code,l.field:name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-INSERT-0003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Delete" PARAMETERS = "field_id" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ NOT AdditionalField_Load_ID( l.field_id, l.field ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalFields WHERE id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-DELETE-0003', g.MvQUERY_Error ) }">
	</MvIF>

	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'DELETE FROM ' $ g.Store_Table_Prefix $ 'TGReviews_AdditionalValues WHERE field_id = ?' }"
			 FIELDS	= "l.field_id">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Library_Filename_Utilities ].Error( 'TGReviews-DELETE-0004', g.MvQUERY_Error ) }">
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1>
</MvFUNCTION>

<MvFUNCTION NAME = "AdditionalFields_Load_Query" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<MvASSIGN NAME = "g.Filter"			VALUE = "{ trim( g.Filter ) }">
	<MvASSIGN NAME = "g.Sort"			VALUE = "{ trim( g.Sort ) }">
	<MvASSIGN NAME = "g.Offset"			VALUE = "{ trim( g.Offset ) }">
	<MvASSIGN NAME = "g.Count"			VALUE = "{ trim( g.Count ) }">
	<MvASSIGN NAME = "l.search_query"	VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_AdditionalFields', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Filter( l.search_query, g.Filter,'id:s.id,code:s.code,name:s.name' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_OrderBy_Fields(l.search_query, g.Sort, 'id:s.id,code:s.code,name:s.name', 's.id' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_AdditionalFields', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Error( 'TGReviews-JSON-0002', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.count" VALUE = 0>

	<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Response_Start() }">
		{
			"data":
				[
					<MvWHILE EXPR = "{ ( NOT TGReviews_AdditionalFields.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.count LT g.Count ) ) }">
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_Start( l.count )}">
					"id": <MvEVAL EXPR = "{ int( TGReviews_AdditionalFields.d.id ) }">,
					"code" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_AdditionalFields.d.code ) }">",
					"name" : "<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_Encode( TGReviews_AdditionalFields.d.name ) }">"
					<MvEVAL EXPR = "{ [ g.Module_JSON ].JSON_ArrayElement_End() }">
					<MvSKIP NAME = "Merchant" VIEW = "TGReviews_AdditionalFields" ROWS = 1>
					</MvWHILE>
				],

			"total_count": <MvEVAL EXPR = "{ int( l.total_count ) }">,
			"start_offset": <MvEVAL EXPR = "{ int( g.Offset ) }">
		}
		<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_AdditionalFields">
	}

</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Update" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.id }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Additional Fields ID can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Additional Fields Code can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Additional Fields Name can not be empty.' ) }">
	</MvIF>


	<MvASSIGN NAME = "l.additional_field" MEMBER = "id"		VALUE = "{ g.id }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "code"	VALUE = "{ g.code }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "name"	VALUE = "{ g.name }">

	<MvIF EXPR = "{ NOT AdditionalFields_Update( l.additional_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Insert" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.code }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'code', 'Additional Fields Code can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ ISNULL g.name }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'name', 'Additional Fields Name can not be empty.' ) }">
	</MvIF>


	<MvASSIGN NAME = "l.additional_field" MEMBER = "code"	VALUE = "{ g.code }">
	<MvASSIGN NAME = "l.additional_field" MEMBER = "name"	VALUE = "{ g.name }">

	<MvIF EXPR = "{ NOT AdditionalFields_Insert( l.additional_field ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>

<MvFUNCTION NAME = "JSON_AdditionalFields_Delete" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "">
	<MvIF EXPR = "{ ISNULL g.Field_ID }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( 'id', 'Additional Fields ID can not be empty.' ) }">
	</MvIF>

	<MvIF EXPR = "{ NOT AdditionalFields_Delete( g.Field_ID ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_FieldError( g.Review_Field_Error, g.Review_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = "{ [ g.Module_JSON ].JSON_Response_Success() }">
</MvFUNCTION>