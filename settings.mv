<MvCOMMENT>
|
|	This file contains functions for the Admin > Setting interface.
|
|	Functions
|		DrawTextField( name, value, placeholder )
|		Settings_UI( module var )
|		Module_Settings( settings var )
|		Load_Setting( name, output var )
|		Settings_Update_LowLevel( name, value )
|		Review_Settings_Update( required var, mail_after var, merchant_email var, customer_email var, per_page, default_sorting, auto_approve )
|		Settings_Update_Required( required var )
|		Settings_Update_MailAfter( mail_after var )
|		Settings_Update_MerchantEmail( merchant_email var )
|		Settings_Update_CustomerEmail( customer_email var )
|		Settings_Update_Recaptcha( recaptcha var )
|		Reviews_Templates_Update( templates var )
|
</MvCOMMENT>

<MvFUNCTION NAME = "DrawTextField" PARAMETERS = "name, value, placeholder" STANDARDOUTPUTLEVEL = "text, html, compresswhitespace">
	<input style="width:100%;padding: 5px;border: 1px solid #ccc;box-sizing: border-box;" type="text" name="{ encodeentities( l.name ) }" value="{ encodeentities( l.value ) }" placeholder="{ encodeentities( l.placeholder ) }" />
</MvFUNCTION>

<MvFUNCTION NAME = "Settings_UI" PARAMETERS = "module var" STANDARDOUTPUTLEVEL = "text, html">
	<MvCOMMENT>
	|
	|	This is used under `Module_System_Content` to render the Settings tab.
	|
	</MvCOMMENT>

	<input type="hidden" name="Review_Tab" value="TGR_SETT" />

	<MvIF EXPR = "{ NOT Module_Settings( l.mod_settings ) }">
		An Error occured while retrieving the module settings. :( <br />
	</MvIF>
	<MvIF EXPR = "{ g.Review_Errors }">
		<MvFOREACH ITERATOR = "l.error" ARRAY = "g.Review_Errors">
			ERROR: <MvEVAL EXPR = "{ l.error }"><br />
		</MvFOREACH>
	</MvIF>

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'TGR_SETT', 'TGR_FIELDS' ) }">
		<MvASSIGN NAME = "l.mod_settings:required" VALUE = "{ miva_array_deserialize( l.mod_settings:required ) }">

		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%">Field</td>
						<td align="center" valign="middle" nowrap="">Required</td>
						<td align="center" valign="middle" nowrap="">Optional</td>
					</tr>
				</thead>
				<tbody>
					<MvFOREACH ITERATOR = "l.field" ARRAY = "l.fields" COUNT = "{ miva_struct_members( l.mod_settings:required, l.fields ) }">
						<tr>
							<td align="left" valign="middle" width="100%" style="text-transform: capitalize;"><MvEVAL EXPR = "{ l.field }"></td>
							<td align="center" valign="middle" nowrap=""><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'required:' $ l.field, '1', miva_variable_value( 'l.mod_settings:required:' $ l.field ), '' ) }"></td>
							<td align="center" valign="middle" nowrap=""><MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawRadio( 'required:' $ l.field, '0', miva_variable_value( 'l.mod_settings:required:' $ l.field ), '' ) }"></td>
						</tr>
					</MvFOREACH>
				</tbody>
			</table>
		</div>

		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Review Settings</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left" valign="middle">Reviews Per Page</td>
						<td align="left" valign="middle"><MvEVAL EXPR = "{ DrawTextField( 'reviews_per_page', l.mod_settings:reviews_per_page, 'Reviews Per Page' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">Default Sorting</td>
						<td align="left" valign="middle">
							<select name="reviews_default_sorting" style="width:100%;padding: 5px;border: 1px solid #ccc;box-sizing: border-box;">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '-id', l.mod_settings:reviews_default_sorting, 'Default' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '-created', l.mod_settings:reviews_default_sorting, 'Most Recent Reviews' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'created', l.mod_settings:reviews_default_sorting, 'Least Recent Reviews' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( '-rating', l.mod_settings:reviews_default_sorting, 'Highest To Lowest Rating' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'rating', l.mod_settings:reviews_default_sorting, 'Lowest to Highest Rating' ) }">
							</select>
						</td>
					</tr>
					<tr>
						<td align="left" valign="middle" style="text-transform: capitalize;" colspan="2">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.mod_settings:auto_approve, 'auto_approve', 1, 'Auto Approve Reviews' ) }">
						</td>
					</tr>
				</tbody>
			</table>
		</div>
		<MvASSIGN NAME = "l.mod_settings:recaptcha" VALUE = "{ miva_array_deserialize( l.mod_settings:recaptcha ) }">
		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">reCAPTCHA</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.mod_settings:recaptcha:enable, 'recaptcha:enable', 1, 'Enable reCAPTCHA' ) }">
						</td>
					</tr>
					<tr>
						<td align="left" valign="middle">Public Key</td>
						<td align="left" valign="middle"><MvEVAL EXPR = "{ DrawTextField( 'recaptcha:public_key', '', 'Public Key' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">Private Key</td>
						<td align="left" valign="middle"><MvEVAL EXPR = "{ DrawTextField( 'recaptcha:private_key', '', 'Private Key' ) }"></td>
					</tr>
				</tbody>
			</table>
		</div>
		<div style="clear:both;"></div>
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'TGR_SETT', 'TGR_EMAIL' ) }">
		<MvASSIGN NAME = "l.mod_settings:mail_after" VALUE = "{ miva_array_deserialize( l.mod_settings:mail_after ) }">
		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Mail After Notification Email</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Page Template Used: <strong>TGR_MailAfter_Email (<a href="{ glosub( g.sessionurl, 'json.mvc', 'admin.mvc' ) $ 'Screen=PAGE&Edit_Page=TGR_MailAfter_Email&Store_Code=' $ encodeattribute( g.Store_Code ) }">Edit Template</a>)</strong></td>
					</tr>
					<tr>
						<td align="left" valign="middle" style="text-transform: capitalize;" colspan="2">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.mod_settings:mail_after:notify, 'mail_after:notify', 1, 'Enable Notification' ) }">
						</td>
					</tr>
					<tr>
						<td align="left" valign="middle">Send After (Days)</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'mail_after:days', l.mod_settings:mail_after:days, 'Days' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">After</td>
						<td align="left" valign="middle" width="100%">
							<select name="mail_after:after">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'order', l.mod_settings:mail_after:after, 'Order Date' ) }">
								<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawOption( 'ship', l.mod_settings:mail_after:after, 'Shipment Date' ) }">
							</select>
						</td>
					</tr>
					<tr>
						<td align="left" valign="middle">From</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'mail_after:from', l.mod_settings:mail_after:from, 'From' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">CC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'mail_after:cc', l.mod_settings:mail_after:cc, 'CC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">BCC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'mail_after:bcc', l.mod_settings:mail_after:bcc, 'BCC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">Subject</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'mail_after:subject', l.mod_settings:mail_after:subject, 'Subject' ) }"></td>
					</tr>
				</tbody>
			</table>
		</div>

		<MvASSIGN NAME = "l.mod_settings:merchant_email" VALUE = "{ miva_array_deserialize( l.mod_settings:merchant_email ) }">
		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Merchant Notification Email</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Page Template Used: <strong>TGR_Merchant_Email (<a href="{ glosub( g.sessionurl, 'json.mvc', 'admin.mvc' ) $ 'Screen=PAGE&Edit_Page=TGR_Merchant_Email&Store_Code=' $ encodeattribute( g.Store_Code ) }">Edit Template</a>)</strong></td>
					</tr>
					<tr>
						<td align="left" valign="middle" style="text-transform: capitalize;" colspan="2">
							<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawCheckbox( l.mod_settings:merchant_email:notify, 'merchant_email:notify', 1, 'Recieve Notifications for New Reviews' ) }">
						</td>
					</tr>
					<tr>
						<td align="left" valign="middle">To</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'merchant_email:to', l.mod_settings:merchant_email:to, 'To' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">From</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'merchant_email:from', l.mod_settings:merchant_email:from, 'From' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">CC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'merchant_email:cc', l.mod_settings:merchant_email:cc, 'CC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">BCC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'merchant_email:bcc', l.mod_settings:merchant_email:bcc, 'BCC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">Subject</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'merchant_email:subject', l.mod_settings:merchant_email:subject, 'Subject' ) }"></td>
					</tr>
				</tbody>
			</table>
		</div>

		<MvASSIGN NAME = "l.mod_settings:customer_email" VALUE = "{ miva_array_deserialize( l.mod_settings:customer_email ) }">
		<div class="mm9_table_container" style="width:375px;float:left;margin:8px 8px 8px 0;">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Customer Notification Email</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td align="left" valign="middle" width="100%" colspan="2">Page Template Used: <strong>TGR_Customer_Email (<a href="{ glosub( g.sessionurl, 'json.mvc', 'admin.mvc' ) $ 'Screen=PAGE&Edit_Page=TGR_Customer_Email&Store_Code=' $ encodeattribute( g.Store_Code ) }">Edit Template</a>)</strong></td>
					</tr>
					<tr>
						<td align="left" valign="middle">From</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'customer_email:from', l.mod_settings:customer_email:from, 'From' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">CC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'customer_email:cc', l.mod_settings:customer_email:cc, 'CC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">BCC</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'customer_email:bcc', l.mod_settings:customer_email:bcc, 'BCC' ) }"></td>
					</tr>
					<tr>
						<td align="left" valign="middle">Subject</td>
						<td align="left" valign="middle" width="100%"><MvEVAL EXPR = "{ DrawTextField( 'customer_email:subject', l.mod_settings:customer_email:subject, 'Subject' ) }"></td>
					</tr>
				</tbody>
			</table>
		</div>
		<div style="clear:both;"></div>
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">

	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_Start( 'TGR_SETT', 'TGR_TEMPL' ) }">
		<MvASSIGN NAME = "g.Reviews_Template:form_id" VALUE = "{ l.mod_settings:form_template }">
		<MvASSIGN NAME = "g.Reviews_Template:reviews_id" VALUE = "{ l.mod_settings:reviews_template }">
		
		<MvHIDE FIELDS = "g.Reviews_Template:form_id,g.Reviews_Template:reviews_id" />

		<MvIF EXPR = "{ g.Reviews_Template:form:template_clear_history }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Delete_History( g.Reviews_Template:form_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Template_Current( g.Reviews_Template:form_id, l.form_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Reviews_Template:form:template_version"				VALUE = "{ l.form_template:id }">
			<MvASSIGN NAME = "g.Reviews_Template:form:template_version_selected"	VALUE = "{ l.form_template:id }">
		<MvELSEIF EXPR = "{ g.Reviews_Template:form:template_recall }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( g.Reviews_Template:form:template_version_selected, l.form_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Reviews_Template:form"	VALUE = "{ l.form_template:settings }">
		<MvELSEIF EXPR = "{ g.Reviews_Template:form_id NE 0 }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Template_Current( g.Reviews_Template:form_id, l.form_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvIF EXPR = "{ g.Reviews_Template:reviews:template_clear_history }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Delete_History( g.Reviews_Template:reviews_id ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Template_Current( g.Reviews_Template:reviews_id, l.reviews_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Reviews_Template:reviews:template_version"				VALUE = "{ l.reviews_template:id }">
			<MvASSIGN NAME = "g.Reviews_Template:reviews:template_version_selected"	VALUE = "{ l.reviews_template:id }">
		<MvELSEIF EXPR = "{ g.Reviews_Template:reviews:template_recall }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( g.Reviews_Template:reviews:template_version_selected, l.reviews_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvASSIGN NAME = "g.Reviews_Template:reviews"	VALUE = "{ l.reviews_template:settings }">
		<MvELSEIF EXPR = "{ g.Reviews_Template:reviews_id NE 0 }">
			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_Template_Current( g.Reviews_Template:reviews_id, l.reviews_template ) }">
				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>
		</MvIF>

		<MvASSIGN NAME = "g.Reviews_Template:form:notes"						VALUE = "">
		<MvASSIGN NAME = "g.Reviews_Template:form:template_code"				VALUE = "{ l.form_template:source }">
		<MvASSIGN NAME = "g.Reviews_Template:form:template_version"				VALUE = "{ l.form_template:id }">
		<MvASSIGN NAME = "g.Reviews_Template:form:template_version_selected"	VALUE = "{ l.form_template:id }">

		<MvASSIGN NAME = "g.Reviews_Template:reviews:notes"						VALUE = "">
		<MvASSIGN NAME = "g.Reviews_Template:reviews:template_code"				VALUE = "{ l.reviews_template:source }">
		<MvASSIGN NAME = "g.Reviews_Template:reviews:template_version"			VALUE = "{ l.reviews_template:id }">
		<MvASSIGN NAME = "g.Reviews_Template:reviews:template_version_selected"	VALUE = "{ l.reviews_template:id }">

		<table border=0 cellpadding=2 cellspacing = 0 width = "100%">
			<tr>
				<td valign="top" nowrap>&nbsp;</td>
				<td><MvEVAL EXPR = "{ Pretty_Code( 'Form_Template', '') }"></td>
			</tr>
			<tr>
				<td valign="top" nowrap>&nbsp;</td>
				<td width="100%">
					<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea( 'Reviews_Template:form:template_code', g.Reviews_Template:form:template_code, 10, 58 ) }">
				</td>
			</tr>

		<MvIF EXPR = "{ l.form_template:id NE 0 }">
			<tr>
				<td nowrap>Notes:</td>
				<td width="100%">
					<input type="text" name="Reviews_Template:form:notes" value="{ encodeentities( g.Reviews_Template:form:notes ) }" size=40>
				</td>
			</tr>

			<tr>
				<td nowrap>Versions:</td>
				<td width="100%">
					<input type="hidden" name="Reviews_Template:form:template_recall" value=0>
					<input type="hidden" name="Reviews_Template:form:template_clear_history" value=0>
					<MvHIDE FIELDS = "g.Reviews_Template:form:template_version">
					<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_ManagedTemplate_Version_Select( g.Reviews_Template:form_id, 'Reviews_Template:form:template_version_selected', g.Reviews_Template:form:template_version_selected ) }">
					<a href="#" onclick="{ 'Toggle( \'' $ 'Reviews_Template:form:template_recall' $ '\', 1 ); return false;' }">Recall</a>
					<a href="#" onclick="{ 'Toggle_Prompt( \'Are you sure you wish to delete all saved configuration settings for the form template?\\r\\nThis action cannot be undone.\', \'Reviews_Template:form:template_clear_history' $ '\', 1 ); return false;' }">Clear History</a>
				</td>
			</tr>
		</MvIF>

		<tr>
			<td colspan="2"><br /><br /></td>
		</tr>

		<tr>
			<td valign="top" nowrap>&nbsp;</td>
			<td><MvEVAL EXPR = "{ Pretty_Code( 'Reviews_Template', ' l.settings:product:id ') }"></td>
		</tr>
		<tr>
			<td valign="top" nowrap>&nbsp;</td>
			<td width="100%">
				<MvEVAL EXPR = "{ [ g.Module_Library_Utilities ].DrawTemplateTextArea( 'Reviews_Template:reviews:template_code', g.Reviews_Template:reviews:template_code, 10, 58 ) }">
			</td>
		</tr>

		<MvIF EXPR = "{ l.reviews_template:id NE 0 }">
			<tr>
				<td nowrap>Notes:</td>
				<td width="100%">
					<input type="text" name="Reviews_Template:reviews:notes" value="{ encodeentities( g.Reviews_Template:reviews:notes ) }" size=40>
				</td>
			</tr>

			<tr>
				<td nowrap>Versions:</td>
				<td width="100%">
					<input type="hidden" name="Reviews_Template:reviews:template_recall" value=0>
					<input type="hidden" name="Reviews_Template:reviews:template_clear_history" value=0>
					<MvHIDE FIELDS = "g.Reviews_Template:reviews:template_version">
					<MvEVAL EXPR = "{ [ g.Module_Feature_TUI_MGR ].TemplateManager_ManagedTemplate_Version_Select( g.Reviews_Template:reviews_id, 'Reviews_Template:reviews:template_version_selected', g.Reviews_Template:reviews:template_version_selected ) }">
					<a href="#" onclick="{ 'Toggle( \'' $ 'Reviews_Template:reviews:template_recall' $ '\', 1 ); return false;' }">Recall</a>
					<a href="#" onclick="{ 'Toggle_Prompt( \'Are you sure you wish to delete all saved configuration settings for the reviews template?\\r\\nThis action cannot be undone.\', \'Reviews_Template:reviews:template_clear_history' $ '\', 1 ); return false;' }">Clear History</a>
				</td>
			</tr>
		</MvIF>

		</table>

		<br /><br />

		<div class="mm9_table_container">
			<table class="mm9_table">
				<thead>
					<tr>
						<td align="left" valign="middle">Function</td>
						<td align="left" valign="middle">Information</td>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Form_Template', '') }"></td>
						<td>Render the Form Template.</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Reviews_Template', ' l.settings:product:id ') }"></td>
						<td>Render the Reviews Template. Returns <pre style="display:inline;">reviews array</pre> in <pre style="display:inline;">l.settings:tgr:reviews</pre>. If you do not pass an id (i.e. put 0, or an empty string), it will return all approved reviews for the store.</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Load_Product_Reviews', ' l.settings:product:id, l.settings:product:reviews ') }"></td>
						<td>Don't want to render the reviews template? Use this to save all the review data to a variable and utilize in template code.</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Date', ' \'F jS, Y\', l.settings:review:created, l.settings:review:formatted_created ') }"></td>
						<td>Format a timestamp, and save to a variable (3rd parameter). Uses PHP's date function as a reference.</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Product_Rating', ' l.settings:product:id, l.settings:product:product_rating ') }"></td>
						<td>Returns the average product rating value to a variable (2nd parameter).</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Product_Review_Breakdowns', ' l.settings:product:id, l.settings:tgr:breakdown ') }"></td>
						<td>Returns a breakdown of ratings for a product to a variable (2nd parameter). Array has 2 members: <pre style="display:inline;">count</pre> and <pre style="display:inline;">rating</pre></td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Product_Review_Count', ' l.settings:product:id, l.settings:tgr:review_count ') }"></td>
						<td>Returns a total number of approved reviews for a product to a variable (2nd parameter).</td>
					</tr>
					<tr>
						<td><MvEVAL EXPR = "{ Pretty_Code( 'Test_MailAfter_Email', ' 12345, \'hello@email.com\' ') }"></td>
						<td>This will trigger the email for any order you specify, to the email you specify. This is specifically made to test the email template. Please note: BCC and CC will not carry through. If you have left a review on a product in the order, it will skip that product.</td>
					</tr>
				</tbody>
			</table>
		</div>
	<MvEVAL EXPR = "{ [ g.Module_Admin ].DrawGroupTabEntry_End() }">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Module_Settings" PARAMETERS = "settings var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Returns all module settings to `settings var`. Every member of the return variable is a setting name.
	|
	</MvCOMMENT>
	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Settings', 's' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_DB ].Error_Load_EOF( 'TGReviews-LOAD-0007' ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Settings', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-0008', g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.setting_num" VALUE = "1">

	<MvWHILE EXPR = "{ ( NOT TGReviews_Settings.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.setting_num LT ( g.Count + 1) ) ) }">

		<MvASSIGN NAME = "l.settings"  MEMBER = "{ TGReviews_Settings.d.name }" VALUE = "{ TGReviews_Settings.d.value }">

		<MvASSIGN NAME = "l.setting_num" VALUE = "{ l.setting_num + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Settings" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Settings">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvFUNCTION NAME = "Load_Setting" PARAMETERS = "name, output var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Load a specific settings `name` and return to `output var`
	|
	</MvCOMMENT>
	<MvASSIGN NAME = "g.name" VALUE = "{ l.name }">

	<MvASSIGN NAME = "l.search_query" VALUE = "">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_SELECT( l.search_query,'s.*' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_FROM( l.search_query, g.Store_Table_Prefix $ 'TGReviews_Settings', 's' ) }">

	<MvEVAL EXPR = "{ [ g.Module_Library_DB ].SQL_Query_WHERE( l.search_query, 'name = ? ', 'g.name' ) }">

	<MvASSIGN NAME = "l.search_sql" VALUE = "{ [ g.Module_Library_DB].SQL_Query_Build( l.search_query, l.search_fields ) }">

	<MvIF EXPR = "{ NOT [ g.Module_Library_DB ].SQL_Query_Count( l.search_query, l.total_count ) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error(g.Error_Code, g.Error_Message ) }">
	<MvELSEIF EXPR = "{ NOT [ g.Module_Library_Native_DBAPI ].DB_OPENVIEW_Range('Merchant', 'TGReviews_Settings', l.search_sql, l.search_fields, g.Offset, g.Count) }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-LOAD-1005',g.MvOPENVIEW_Error ) }">
	</MvIF>

	<MvASSIGN NAME = "l.setting_num" VALUE = "1">

	<MvWHILE EXPR = "{ ( NOT TGReviews_Settings.d.EOF ) AND ( ( g.Count EQ 0 ) OR (l.setting_num LT ( g.Count + 1) ) ) }">

		<MvASSIGN NAME = "l.output"  VALUE = "{ TGReviews_Settings.d.value }">

		<MvASSIGN NAME = "l.setting_num" VALUE = "{ l.setting_num + 1 }">

		<MvSKIP NAME = "Merchant" VIEW = "TGReviews_Settings" ROWS = 1>
	</MvWHILE>

	<MvCLOSEVIEW NAME = "Merchant" VIEW = "TGReviews_Settings">
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Settings_Update_LowLevel" PARAMETERS = "name, value" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Lowlevel version of other `Settings Update` Functions.
	|
	</MvCOMMENT>
	<MvQUERY NAME	= "Merchant"
			 QUERY	= "{ 'UPDATE ' $ g.Store_Table_Prefix $ 'TGReviews_Settings
					      SET
							value	= ?
					      WHERE
						    name	= ?' }"
			 FIELDS	= "l.value, l.name">
	<MvIF EXPR = "{ g.MvQUERY_Error }">
		<MvFUNCTIONRETURN VALUE = "{ [ g.Module_Library_Utilities ].Error( 'TGReviews-UPDATE-0004', g.MvQUERY_Error ) }">
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Review_Settings_Update" PARAMETERS = "required var, mail_after var, merchant_email var, customer_email var, per_page, default_sorting, auto_approve, recaptcha" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	This is used  by `Module_System_Update` to update all the settings of the module.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ l.required }">
		<MvIF EXPR = "{ NOT Settings_Update_Required( l.required ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Required Fields.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.mail_after }">
		<MvIF EXPR = "{ NOT Settings_Update_MailAfter( l.mail_after ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Mail After Fields.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.merchant_email }">
		<MvIF EXPR = "{ NOT Settings_Update_MerchantEmail( l.merchant_email ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Mail After Fields.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.customer_email }">
		<MvIF EXPR = "{ NOT Settings_Update_CustomerEmail( l.customer_email ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Mail After Fields.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.per_page }">
		<MvASSIGN NAME = "l.per_page" VALUE = "{ int( l.per_page ) }">
		<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'reviews_per_page', l.per_page ) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Reviews Per Page.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ l.recaptcha }">
		<MvASSIGN NAME = "l.recaptcha:enable" VALUE = "{ int( l.recaptcha:enable) }">
		<MvIF EXPR = "{ NOT Settings_Update_Recaptcha( l.recaptcha) }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update reCAPTCHA settings.', -1 ) }">
		</MvIF>
	</MvIF>

	<MvASSIGN NAME = "l.auto_approve" VALUE = "{ int( l.auto_approve ) }">
	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'auto_approve', l.auto_approve ) }">
		<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Auto Approve.', -1 ) }">
	</MvIF>

	<MvIF EXPR = "{ l.default_sorting }">
		<MvIF EXPR = "{ 
			l.default_sorting NE '-id'		AND
			l.default_sorting NE '-created'		AND
			l.default_sorting NE 'created'		AND
			l.default_sorting NE '-rating'	AND
			l.default_sorting NE 'rating'
		 }">
			<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Invalid selection for Reviews Default Sorting.', -1 ) }">
		<MvELSE>
			<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'reviews_default_sorting', l.default_sorting ) }">
				<MvASSIGN NAME = "l.void" VALUE = "{ miva_array_insert( g.Review_Errors, 'Could not Update Reviews Default Sorting.', -1 ) }">
			</MvIF>
		</MvIF>
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Settings_Update_Required" PARAMETERS = "required var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Validation of `required` setting, and Updates the setting afterward.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT Load_Setting( 'required', l.prev_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvASSIGN NAME = "l.prev_settings" VALUE = "{ miva_array_deserialize( l.prev_settings ) }">

	<MvIF EXPR = "{ ( l.prev_settings:email NE l.required:email ) AND ( l.required:email EQ 1 OR l.required:email EQ 0) }">				<MvASSIGN NAME = "l.prev_settings:email" 	VALUE = "{ l.required:email }">		</MvIF>
	<MvIF EXPR = "{ ( l.prev_settings:location NE l.required:location ) AND ( l.required:location EQ 1 OR l.required:location EQ 0) }">	<MvASSIGN NAME = "l.prev_settings:location" VALUE = "{ l.required:location }">	</MvIF>
	<MvIF EXPR = "{ ( l.prev_settings:name NE l.required:name ) AND ( l.required:name EQ 1 OR l.required:name EQ 0) }"	>				<MvASSIGN NAME = "l.prev_settings:name" 	VALUE = "{ l.required:name }">		</MvIF>
	<MvIF EXPR = "{ ( l.prev_settings:summary NE l.required:summary ) AND ( l.required:summary EQ 1 OR l.required:summary EQ 0) }">		<MvASSIGN NAME = "l.prev_settings:summary" 	VALUE = "{ l.required:summary }">	</MvIF>
	<MvIF EXPR = "{ ( l.prev_settings:title NE l.required:title ) AND ( l.required:title EQ 1 OR l.required:title EQ 0) }">				<MvASSIGN NAME = "l.prev_settings:title" 	VALUE = "{ l.required:title }">		</MvIF>

	<MvASSIGN NAME = "l.insert" VALUE = "{ miva_array_serialize( l.prev_settings ) }">

	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'required', l.insert ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvFUNCTION NAME = "Settings_Update_MailAfter" PARAMETERS = "mail_after var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Validation of `mail_after` setting, and Updates the setting afterward.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT Load_Setting( 'mail_after', l.prev_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvASSIGN NAME = "l.prev_settings" VALUE = "{ miva_array_deserialize( l.prev_settings ) }">

	<MvIF EXPR = "{ NOT ( ISNULL l.mail_after:days ) AND NOT isdigit( l.mail_after:days ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>

	<MvIF EXPR = "{ l.prev_settings:after NE l.mail_after:after }">		<MvASSIGN NAME = "l.prev_settings:after" 	VALUE = "{ l.mail_after:after }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:days NE l.mail_after:days }">		<MvASSIGN NAME = "l.prev_settings:days" VALUE = "{ l.mail_after:days }">		</MvIF>
	<MvIF EXPR = "{ l.prev_settings:from NE l.mail_after:from }"	>	<MvASSIGN NAME = "l.prev_settings:from" 	VALUE = "{ l.mail_after:from }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:notify NE l.mail_after:notify }">	<MvASSIGN NAME = "l.prev_settings:notify" 	VALUE = "{ l.mail_after:notify }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:cc NE l.mail_after:cc }">			<MvASSIGN NAME = "l.prev_settings:cc" 	VALUE = "{ l.mail_after:cc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:bcc NE l.mail_after:bcc }">			<MvASSIGN NAME = "l.prev_settings:bcc" 	VALUE = "{ l.mail_after:bcc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:subject NE l.mail_after:subject }">	<MvASSIGN NAME = "l.prev_settings:subject" 	VALUE = "{ l.mail_after:subject }">	</MvIF>

	<MvASSIGN NAME = "l.insert" VALUE = "{ miva_array_serialize( l.prev_settings ) }">

	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'mail_after', l.insert ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvFUNCTION NAME = "Settings_Update_MerchantEmail" PARAMETERS = "merchant_email var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Validation of `merchant_email` setting, and Updates the setting afterward.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT Load_Setting( 'merchant_email', l.prev_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvASSIGN NAME = "l.prev_settings" VALUE = "{ miva_array_deserialize( l.prev_settings ) }">

	<MvIF EXPR = "{ l.prev_settings:notify NE l.merchant_email:notify }">	<MvASSIGN NAME = "l.prev_settings:notify" 	VALUE = "{ l.merchant_email:notify }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:to NE l.merchant_email:to }">			<MvASSIGN NAME = "l.prev_settings:to" 	VALUE = "{ l.merchant_email:to }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:from NE l.merchant_email:from }">		<MvASSIGN NAME = "l.prev_settings:from" 	VALUE = "{ l.merchant_email:from }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:cc NE l.merchant_email:cc }">			<MvASSIGN NAME = "l.prev_settings:cc" 	VALUE = "{ l.merchant_email:cc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:bcc NE l.merchant_email:bcc }">			<MvASSIGN NAME = "l.prev_settings:bcc" 	VALUE = "{ l.merchant_email:bcc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:subject NE l.merchant_email:subject }">	<MvASSIGN NAME = "l.prev_settings:subject" 	VALUE = "{ l.merchant_email:subject }">	</MvIF>

	<MvASSIGN NAME = "l.insert" VALUE = "{ miva_array_serialize( l.prev_settings ) }">

	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'merchant_email', l.insert ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>

<MvFUNCTION NAME = "Settings_Update_CustomerEmail" PARAMETERS = "customer_email var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Validation of `customer_email` setting, and Updates the setting afterward.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT Load_Setting( 'customer_email', l.prev_settings ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvASSIGN NAME = "l.prev_settings" VALUE = "{ miva_array_deserialize( l.prev_settings ) }">

	<MvIF EXPR = "{ l.prev_settings:from NE l.customer_email:from }">		<MvASSIGN NAME = "l.prev_settings:from" 	VALUE = "{ l.customer_email:from }">	</MvIF>
	<MvIF EXPR = "{ l.prev_settings:cc NE l.customer_email:cc }">			<MvASSIGN NAME = "l.prev_settings:cc" 	VALUE = "{ l.customer_email:cc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:bcc NE l.customer_email:bcc }">			<MvASSIGN NAME = "l.prev_settings:bcc" 	VALUE = "{ l.customer_email:bcc }">			</MvIF>
	<MvIF EXPR = "{ l.prev_settings:subject NE l.customer_email:subject }">	<MvASSIGN NAME = "l.prev_settings:subject" 	VALUE = "{ l.customer_email:subject }">	</MvIF>

	<MvASSIGN NAME = "l.insert" VALUE = "{ miva_array_serialize( l.prev_settings ) }">

	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'customer_email', l.insert ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />
</MvFUNCTION>


<MvFUNCTION NAME = "Settings_Update_Recaptcha" PARAMETERS = "recaptcha var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Validation of `recaptcha` setting, and Updates the setting afterward.
	|
	</MvCOMMENT>
	<MvASSIGN NAME = "l.void" VALUE = "{ Load_Setting( 'recaptcha', l.prev_recaptcha ) }">
	<MvASSIGN NAME = "l.prev_recaptcha" VALUE = "{ miva_array_deserialize( l.prev_recaptcha ) }">
	<MvIF EXPR = "{ ISNULL l.recaptcha:private_key }">	<MvASSIGN NAME = "l.recaptcha:private_key" VALUE = "{ l.prev_recaptcha:private_key }">	</MvIF>
	<MvIF EXPR = "{ ISNULL l.recaptcha:public_key }">	<MvASSIGN NAME = "l.recaptcha:public_key" VALUE = "{ l.prev_recaptcha:public_key }">	</MvIF>

	<MvASSIGN NAME = "l.insert" VALUE = "{ miva_array_serialize( l.recaptcha ) }">

	<MvIF EXPR = "{ NOT Settings_Update_LowLevel( 'recaptcha', l.insert ) }">
		<MvFUNCTIONRETURN VALUE = 0 />
	</MvIF>
	<MvFUNCTIONRETURN VALUE = 1 />	
</MvFUNCTION>

<MvFUNCTION NAME = "Reviews_Templates_Update" PARAMETERS = "templates var" STANDARDOUTPUTLEVEL = "">
	<MvCOMMENT>
	|
	|	Updates form & reviews template via admin.
	|
	</MvCOMMENT>
	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.templates:form:template_version, l.template ) OR
					NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.templates:form_id, l.managedtemplate ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ crypto_md5( l.templates:form:template_code ) EQ crypto_md5( l.template:source ) }">
		<MvIF EXPR = "{ l.template:id NE l.managedtemplate:current_id }">
			<MvASSIGN NAME = "l.managedtemplate:current_id"	VALUE = "{ l.template:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.managedtemplate, l.template, l.compile_error ) }">
				<MvIF EXPR = "{ len( l.compile_error ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( g.Tab, 'Reviews_Template:form:template_code', l.compile_error ) }">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>

				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGReviews-TEMPL-1001', l.module $ '  template reverted' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplateVersion( l.managedtemplate, l.templates:form:notes, l.templates:form:template_code, l.settings, l.compile_error ) }">
			<MvIF EXPR = "{ len( l.compile_error ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( g.Tab, 'Reviews_Template:form:template_code', l.compile_error ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>

	<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_DB ].ManagedTemplateVersion_Load_ID( l.templates:reviews:template_version, l.template ) OR
					NOT [ g.Module_Feature_TUI_DB ].ManagedTemplate_Load_ID( l.templates:reviews_id, l.managedtemplate ) }">
		<MvFUNCTIONRETURN VALUE = 0>
	</MvIF>

	<MvIF EXPR = "{ crypto_md5( l.templates:reviews:template_code ) EQ crypto_md5( l.template:source ) }">
		<MvIF EXPR = "{ l.template:id NE l.managedtemplate:current_id }">
			<MvASSIGN NAME = "l.managedtemplate:current_id"	VALUE = "{ l.template:id }">

			<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Revert_ManagedTemplateVersion( l.managedtemplate, l.template, l.compile_error ) }">
				<MvIF EXPR = "{ len( l.compile_error ) }">
					<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( g.Tab, 'Reviews_Template:reviews:template_code', l.compile_error ) }">
					<MvFUNCTIONRETURN VALUE = 1>
				</MvIF>

				<MvFUNCTIONRETURN VALUE = 0>
			</MvIF>

			<MvEVAL EXPR = "{ [ g.Module_Admin ].Admin_Log_Action( 'TGReviews-TEMPL-1001', l.module $ '  template reverted' ) }">
		</MvIF>
	<MvELSE>
		<MvIF EXPR = "{ NOT [ g.Module_Feature_TUI_MGR ].TemplateManager_Create_ManagedTemplateVersion( l.managedtemplate, l.templates:reviews:notes, l.templates:reviews:template_code, l.settings, l.compile_error ) }">
			<MvIF EXPR = "{ len( l.compile_error ) }">
				<MvASSIGN NAME = "l.null" VALUE = "{ [ g.Module_Admin ].FieldError( g.Tab, 'Reviews_Template:reviews:template_code', l.compile_error ) }">
				<MvFUNCTIONRETURN VALUE = 1>
			</MvIF>

			<MvFUNCTIONRETURN VALUE = 0>
		</MvIF>
	</MvIF>
</MvFUNCTION>